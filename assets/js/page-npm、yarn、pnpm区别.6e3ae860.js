(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{508:function(t,a,s){t.exports=s.p+"assets/img/npm-install-process.1dcb4f8b.svg"},737:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"npm、yarn、pnpm-区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm、yarn、pnpm-区别"}},[t._v("#")]),t._v(" npm、yarn、pnpm 区别")]),t._v(" "),n("h2",{attrs:{id:"npm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[t._v("#")]),t._v(" npm")]),t._v(" "),n("h3",{attrs:{id:"常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),n("h4",{attrs:{id:"_1-初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-初始化"}},[t._v("#")]),t._v(" 1）初始化")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" init\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h4",{attrs:{id:"_2-安装依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装依赖"}},[t._v("#")]),t._v(" 2）安装依赖")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 精确安装最新版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-exact 包名 \n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -E 包名\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装指定版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" 包名@版本号\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("p",[n("code",[t._v("--save-exact")]),t._v(" 的作用就是固定依赖包的版本，不要带 "),n("code",[t._v("^")]),t._v(" 或 "),n("code",[t._v("~")]),t._v("，避免出现小版本，有利于版本统一。")]),t._v(" "),n("h4",{attrs:{id:"_3-查询依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-查询依赖"}},[t._v("#")]),t._v(" 3）查询依赖")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看包信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" info 包名\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看包的信息中的某个字段（常用，例如查看该包在 npm 上提供了哪些版本可以下载）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" info 包名 versions\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看包的文档")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" docs 包名\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看全局包的下载路径")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" root -g\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有全局安装的模块")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm list –g")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看全局模块的一级目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" list -g --depth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br")])]),n("h4",{attrs:{id:"_4-更新依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-更新依赖"}},[t._v("#")]),t._v(" 4）更新依赖")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查有哪些包需要更新")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" outdated\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" update "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("包名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h4",{attrs:{id:"_5-卸载依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-卸载依赖"}},[t._v("#")]),t._v(" 5）卸载依赖")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" uninstall "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 包名\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h4",{attrs:{id:"_6-配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-配置"}},[t._v("#")]),t._v(" 6）配置")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看全部 npm 默认设置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" –l\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查询当前镜像源")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" get registry\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设成淘宝镜像源地址")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" registry http://registry.npm.taobao.org/\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设成官方默认的镜像源地址")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" registry https://registry.npmjs.org/\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("h3",{attrs:{id:"npm-脚本-scripts"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-脚本-scripts"}},[t._v("#")]),t._v(" npm 脚本（scripts）")]),t._v(" "),n("p",[t._v("在开发的过程中，我们可能会反复使用很多的 CLI 命令，例如：")]),t._v(" "),n("ul",[n("li",[t._v("启动工程命令（node 或一些第三方包提供的 CLI 命令）")]),t._v(" "),n("li",[t._v("部署工程命令（一些第三方包提供的 CLI 命令）")]),t._v(" "),n("li",[t._v("测试工程命令（一些第三方包提供的 CLI 命令）")])]),t._v(" "),n("p",[t._v("只需要在 "),n("code",[t._v("package.json")]),t._v(" 中配置 "),n("code",[t._v("scripts")]),t._v(" 字段，即可配置各种脚本名称，然后就可以运行简单的指令来完成各种操作了。")]),t._v(" "),n("p",[t._v("运行方式是：")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run 脚本名称\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("其中，npm 对某些常用的脚本名称进行了简化，下面的脚本名称是不需要使用 "),n("code",[t._v("run")]),t._v(" 的：")]),t._v(" "),n("ul",[n("li",[t._v("start")]),t._v(" "),n("li",[t._v("stop")]),t._v(" "),n("li",[t._v("test")])]),t._v(" "),n("h3",{attrs:{id:"语义版本书写规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语义版本书写规则"}},[t._v("#")]),t._v(" 语义版本书写规则")]),t._v(" "),n("p",[n("code",[t._v("package.json")]),t._v(" 文件中记录了当前工程的依赖：")]),t._v(" "),n("ul",[n("li",[t._v("dependencies：生产环境的依赖包")]),t._v(" "),n("li",[t._v("devDependencies：仅开发环境的依赖包")])]),t._v(" "),n("p",[t._v("在 "),n("code",[t._v("package.json")]),t._v(" 中，依赖包的语义版本书写规则见下表：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("符号")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("示例")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("示例描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v(">")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("大于某个版本")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v(">1.2.1")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("大于 1.2.1 版本")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v(">=")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("大于等于某个版本")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v(">=1.2.1")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("大于等于 1.2.1 版本")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("<")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("小于某个版本")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("<1.2.1")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("小于 1.2.1 版本")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("<=")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("小于等于某个版本")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("<=1.2.1")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("小于等于 1.2.1 版本")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("介于两个版本之间")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("1.2.1 - 1.4.5")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("介于 1.2.1 和 1.4.5 之间")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("不固定的版本号")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("1.3.x")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("只要保证主版本号是 1，次版本号是 3 即可")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("~")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("补丁版本号可增")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("~1.3.4")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("保证主版本号是 1，次版本号是 3，补丁版本号大于等于 4")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("^")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("次版本和补丁版本可增")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("^1.3.4")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("保证主版本号是 1，次版本号可以大于等于 3，补丁版本号可以大于等于 4")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("*")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("最新版本")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("*")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("始终安装最新版本")])])])]),t._v(" "),n("h3",{attrs:{id:"npm-安装机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-安装机制"}},[t._v("#")]),t._v(" npm 安装机制")]),t._v(" "),n("p",[n("strong",[t._v("首先，执行 "),n("code",[t._v("npm install")]),t._v(" 之后，会检查和获取 npm 的配置")]),t._v("，这里的优先级为：")]),t._v(" "),n("ul",[n("li",[t._v("项目级的 "),n("code",[t._v(".npmrc")]),t._v(" 文件 > 用户级的 "),n("code",[t._v(".npmrc")]),t._v(" 文件 > 全局级的 "),n("code",[t._v(".npmrc")]),t._v(" > npm 内置的 "),n("code",[t._v(".npmrc")]),t._v(" 文件")])]),t._v(" "),n("p",[n("strong",[t._v("然后，检查项目中是否有 "),n("code",[t._v("package-lock.json")]),t._v(" 文件")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("如果有，检查 "),n("code",[t._v("package-lock.json")]),t._v(" 和 "),n("code",[t._v("package.json")]),t._v(" 声明的依赖是否一致：\n"),n("ul",[n("li",[t._v("一致，直接使用 "),n("code",[t._v("package-lock.json")]),t._v(" 中的信息，从网络或者缓存中加载依赖。")]),t._v(" "),n("li",[t._v("不一致，根据下述流程中的不同版本进行处理。")])])]),t._v(" "),n("li",[t._v("如果没有，那么会根据 "),n("code",[t._v("package.json")]),t._v(" 递归构建依赖树，然后就会根据构建好的依赖去下载完整的依赖资源，在下载的时候，会检查有没有相关的资源缓存：\n"),n("ul",[n("li",[t._v("存在，直接解压到 "),n("code",[t._v("node_modules")]),t._v(" 文件中。")]),t._v(" "),n("li",[t._v("不存在，从 npm 远端仓库下载包，校验包的完整性，同时添加到缓存中，解压到 "),n("code",[t._v("node_modules")]),t._v(" 中。")])])])]),t._v(" "),n("p",[n("strong",[t._v("最后，生成 "),n("code",[t._v("package-lock.json")]),t._v(" 文件")]),t._v("。")]),t._v(" "),n("div",{staticStyle:{"text-align":"center"}},[n("img",{attrs:{src:s(508),alt:"npm 的安装机制"}}),t._v(" "),n("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（npm 的安装机制）")])]),t._v(" "),n("h3",{attrs:{id:"npm-缓存机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-缓存机制"}},[t._v("#")]),t._v(" npm 缓存机制")]),t._v(" "),n("p",[t._v("在实际的项目开发中，如果每次都去安装对应依赖时，如果相关的依赖包体积过大或者是依赖于网络，无疑会增加安装的时间成本。那么缓存在这里的就是一个解决问题的好办法。")]),t._v(" "),n("p",[t._v("通过下面这个命令可以查看 npm 在本地缓存的位置：")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config get cache\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("里面有三个文件夹：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("_cacache")])]),t._v(" "),n("li",[n("code",[t._v("_locks")])]),t._v(" "),n("li",[n("code",[t._v("_logs")])])]),t._v(" "),n("p",[t._v("那么我没有对"),n("strong",[t._v("缓存是如何存储并且被利用的")]),t._v("进行底层剖析，可以"),n("a",{attrs:{href:"https://github.com/sliwey/blog/issues/1",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看这篇文章"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"yarn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yarn"}},[t._v("#")]),t._v(" yarn")]),t._v(" "),n("h3",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),n("p",[t._v("yarn 的出现是为了解决历史上 npm 的某些不足：")]),t._v(" "),n("p",[t._v("当时 npm 还没有 "),n("code",[t._v("package-lock.json")]),t._v(" 文件，安装的时候速度很慢，稳定性很差，yarn 的出现很好的解决了一下的一些问题：")]),t._v(" "),n("ul",[n("li",[t._v("依赖目录嵌套层次深：很久以前 npm 的依赖是嵌套的，而 Windows 系统无法支持太深的目录。")]),t._v(" "),n("li",[t._v("下载速度慢\n"),n("ul",[n("li",[t._v("由于嵌套层次的问题，所以npm对包的下载只能是串行的，即前一个包下载完后才会下载下一个包，导致带宽资源没有完全利用。")]),t._v(" "),n("li",[t._v("多个相同版本的包被重复的下载。")])])]),t._v(" "),n("li",[t._v("控制台输出繁杂：安装时有大量的信息输出到控制台，遇到错误极难查看。")]),t._v(" "),n("li",[t._v("工程移植问题：由于 npm 的版本依赖可以是模糊的，可能会导致工程移植后，依赖的确切版本不一致。")])]),t._v(" "),n("p",[t._v("而 yarn 用到了以下手段：")]),t._v(" "),n("ul",[n("li",[t._v("使用扁平的目录结构")]),t._v(" "),n("li",[t._v("并行下载")]),t._v(" "),n("li",[t._v("使用本地缓存")]),t._v(" "),n("li",[t._v("控制台仅输出关键信息")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("yarn-lock")]),t._v(" 文件记录确切依赖")])]),t._v(" "),n("p",[t._v("不仅如此，yarn 还优化了以下内容：")]),t._v(" "),n("ul",[n("li",[t._v("增加了某些功能强大的命令")]),t._v(" "),n("li",[t._v("让既有的命令更加语义化")]),t._v(" "),n("li",[t._v("本地安装的 CLI 工具可以使用 yarn 直接启动")]),t._v(" "),n("li",[t._v("将全局安装的目录当作一个普通的工程，生成 "),n("code",[t._v("package.json")]),t._v(" 文件，便于全局安装移植")])]),t._v(" "),n("p",[t._v("但现在 npm 也通过不断的优化，几乎完全解决了上面的问题：")]),t._v(" "),n("ul",[n("li",[t._v("目录扁平化")]),t._v(" "),n("li",[t._v("并行下载")]),t._v(" "),n("li",[t._v("本地缓存")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("package-lock")]),t._v(" 记录确切依赖")]),t._v(" "),n("li",[t._v("增加了大量的命令别名")]),t._v(" "),n("li",[t._v("内置了 "),n("code",[t._v("npx")]),t._v("，可以启动本地的 CLI 工具")]),t._v(" "),n("li",[t._v("极大的简化了控制台输出")])]),t._v(" "),n("p",[t._v("所以现在的 npm 已经和 yarn 非常接近，甚至没有差距了。")]),t._v(" "),n("h3",{attrs:{id:"常用命令-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用命令-2"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),n("h4",{attrs:{id:"_1-安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装"}},[t._v("#")]),t._v(" 1）安装")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局安装 yarn")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("h4",{attrs:{id:"_2-初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-初始化"}},[t._v("#")]),t._v(" 2）初始化")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" init\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h4",{attrs:{id:"_3-安装依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-安装依赖"}},[t._v("#")]),t._v(" 3）安装依赖")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加指定包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" package-name "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--dev/-D"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--exact/-E"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 package.json 中的所有依赖")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--production/--prod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h4",{attrs:{id:"_4-脚本和本地-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-脚本和本地-cli"}},[t._v("#")]),t._v(" 4）脚本和本地 CLI")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行脚本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# start、stop、test 可以省略 run")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run 脚本名\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行本地安装的 CLI")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run CLI名\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("h4",{attrs:{id:"_5-查询依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-查询依赖"}},[t._v("#")]),t._v(" 5）查询依赖")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 bin 目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bin\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查询包信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" info 包名 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("子字段"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列举已安装的依赖")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" list "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--depth"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("依赖深度"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("p",[t._v("yarn 的 list 命令和 npm 的 list 不同，yarn 输出的信息更加丰富，包括顶级目录结构、每个包的依赖版本号。")]),t._v(" "),n("h4",{attrs:{id:"_6-更新依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-更新依赖"}},[t._v("#")]),t._v(" 6）更新依赖")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列举需要更新的包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" outdated\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" upgrade "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("包名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h4",{attrs:{id:"_7-卸载依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-卸载依赖"}},[t._v("#")]),t._v(" 7）卸载依赖")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载包")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" remove 包名\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("h3",{attrs:{id:"yarn-的特别命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yarn-的特别命令"}},[t._v("#")]),t._v(" yarn 的特别命令")]),t._v(" "),n("p",[t._v("在终端命令上，yarn 不仅仅是对 npm 的命令做了一个改名，还增加了一些原本没有的命令。")]),t._v(" "),n("h4",{attrs:{id:"_1-yarn-check"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-yarn-check"}},[t._v("#")]),t._v(" 1）yarn check")]),t._v(" "),n("p",[t._v("使用 "),n("code",[t._v("yarn check")]),t._v(" 命令，可以验证 "),n("code",[t._v("package.json")]),t._v(" 文件的依赖记录和 lock 文件是否一致，这对于防止篡改非常有用。")]),t._v(" "),n("h4",{attrs:{id:"_2-yarn-audit"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-yarn-audit"}},[t._v("#")]),t._v(" 2）yarn audit")]),t._v(" "),n("p",[t._v("使用 "),n("code",[t._v("yarn audit")]),t._v(" 命令，可以检查本地安装的包有哪些已知漏洞，以表格的形式列出，漏洞级别分为以下几种：")]),t._v(" "),n("ul",[n("li",[t._v("INFO：信息级别")]),t._v(" "),n("li",[t._v("LOW: 低级别")]),t._v(" "),n("li",[t._v("MODERATE：中级别")]),t._v(" "),n("li",[t._v("HIGH：高级别")]),t._v(" "),n("li",[t._v("CRITICAL：关键级别")])]),t._v(" "),n("h4",{attrs:{id:"_3-yarn-why"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-yarn-why"}},[t._v("#")]),t._v(" 3）yarn why")]),t._v(" "),n("p",[t._v("使用 "),n("code",[t._v("yarn why 包名")]),t._v(" 命令，可以在控制台打印出为什么安装了这个包，哪些包会用到它。")]),t._v(" "),n("h4",{attrs:{id:"_4-yarn-create"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-yarn-create"}},[t._v("#")]),t._v(" 4）yarn create")]),t._v(" "),n("p",[t._v("过去，我们都是使用如下的做法通过脚手架来搭建一个工程结构：")]),t._v(" "),n("ul",[n("li",[t._v("全局安装脚手架工具")]),t._v(" "),n("li",[t._v("使用全局命令搭建脚手架")])]),t._v(" "),n("p",[t._v("由于大部分脚手架工具都是以 "),n("code",[t._v("create-xxx")]),t._v(" 的方式命名的，比如 React 的官方脚手架名称为 "),n("code",[t._v("create-react-app")]),t._v("。")]),t._v(" "),n("p",[t._v("因此，可以使用 "),n("code",[t._v("yarn create")]),t._v(" 命令来一步完成安装和搭建，例如：")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" create react-app my-app\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同于下面的两条命令")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" global "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" create-react-app\ncreate-react-app my-app\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h3",{attrs:{id:"yarn-安装机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yarn-安装机制"}},[t._v("#")]),t._v(" yarn 安装机制")]),t._v(" "),n("p",[t._v("yarn 的安装大致分为 5 个步骤：")]),t._v(" "),n("p",[t._v("检测（checking）、解析包（Resolving Packages）、获取包（Fetching）、链接包（Linking Packages）、构建包（Building Packages）")]),t._v(" "),n("h4",{attrs:{id:"_1-检测包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-检测包"}},[t._v("#")]),t._v(" 1）检测包")]),t._v(" "),n("p",[t._v("检测我们的项目中是否存在 npm 相关的文件，比如 "),n("code",[t._v("package-lock.json")]),t._v(" 等。如果有，就会有相关的提示用户注意：这些文件可能会存在冲突。在这一步骤中也会检测系统 OS、CPU 等信息。")]),t._v(" "),n("h4",{attrs:{id:"_2-解析包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-解析包"}},[t._v("#")]),t._v(" 2）解析包")]),t._v(" "),n("p",[t._v("这一步会解析依赖树中的每一个包的信息：")]),t._v(" "),n("p",[t._v("首先呢获取到首层依赖：也就是当前项目中的 "),n("code",[t._v("package.json")]),t._v(" 定义的 "),n("code",[t._v("dependencies")]),t._v("、"),n("code",[t._v("devDependencies")]),t._v("、"),n("code",[t._v("optionalDependencies")]),t._v("的内容。")]),t._v(" "),n("p",[t._v("接着会采用遍历首层依赖的方式来获取包的依赖信息，以及递归查找每个依赖下嵌套依赖的版本信息，并将解析过的包和正在进行解析的包用 Set 数据结构进行存储，这样就可以保证同一版本范围内的包不会进行重复的解析。")]),t._v(" "),n("blockquote",[n("p",[t._v("举个例子")]),t._v(" "),n("ul",[n("li",[t._v("对于没有解析过的包 A，首次尝试从 "),n("code",[t._v("yarn.lock")]),t._v(" 中获取版本信息，并且标记为已解析。")]),t._v(" "),n("li",[t._v("如果在 "),n("code",[t._v("yarn.lock")]),t._v(" 中没有找到包 A，则向 Registry 发起请求获取满足版本范围内的已知的最高版本的包信息，获取之后将该包标记为已解析。")])])]),t._v(" "),n("p",[t._v("经过解析包这一步之后，我们就已经确定了解析包的具体版本信息和包的下载地址。")]),t._v(" "),n("h4",{attrs:{id:"_3-获取包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-获取包"}},[t._v("#")]),t._v(" 3）获取包")]),t._v(" "),n("p",[t._v("这一步首先会检查缓存中是否有当前依赖的包，同时将缓存中不存在的包下载到缓存的目录中。")]),t._v(" "),n("blockquote",[n("p",[t._v("在 yarn 中会根据 cacheFolder+"),n("a",{attrs:{href:"https://github.com/Trott/slug",target:"_blank",rel:"noopener noreferrer"}},[t._v("slug"),n("OutboundLink")],1),t._v("+node_modules+pkg.name 生成一个路径，判断系统中是否存在该 path，如果存在证明已经有缓存，不用重新下载。这个 path 也就是依赖包缓存的具体路径。")])]),t._v(" "),n("p",[t._v("对于没有命中的缓存包，在 yarn 中存在一个 Fetch 队列，按照具体的规则进行网络请求。如果下载的包是一个 file 协议，或者是相对路径，就说明指向一个本地目录，此时会调用 Fetch From Local 从离线缓存中获取包；否则调用 Fetch From External 获取包，最终获取的结果使用 fs.createWriteStream 写入到缓存目录。")]),t._v(" "),n("h4",{attrs:{id:"_4-链接包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-链接包"}},[t._v("#")]),t._v(" 4）链接包")]),t._v(" "),n("p",[t._v("上一步已经把依赖放到了缓存目录，现在要把项目中的依赖复制到 "),n("code",[t._v("node_modules")]),t._v(" 目录下。此时需要遵循一个扁平化的原则：复制依赖之前，yarn 会先解析 "),n("code",[t._v("peerDepdencies")]),t._v("，如果找不到符合要求的 "),n("code",[t._v("peerDepdencies")]),t._v(" 的包，会有 "),n("code",[t._v("warning")]),t._v(" 提示，并最终拷贝依赖到项目中。")]),t._v(" "),n("h4",{attrs:{id:"_5-构建包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-构建包"}},[t._v("#")]),t._v(" 5）构建包")]),t._v(" "),n("p",[t._v("如果依赖包中存在二进制包需要进行编译，那么会在这一步进行。")]),t._v(" "),n("h2",{attrs:{id:"pnpm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pnpm"}},[t._v("#")]),t._v(" pnpm")]),t._v(" "),n("h3",{attrs:{id:"介绍-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍-2"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),n("p",[t._v("pnpm 是一种新起的包管理器，从 npm 的下载量看，目前还没有超过 yarn，但它的实现方式值得主流包管理器学习，某些开发者极力推荐使用 pnpm。")]),t._v(" "),n("p",[t._v("从结果上来看，它具有以下优势：")]),t._v(" "),n("ul",[n("li",[t._v("目前，安装效率高于 npm 和 yarn 的最新版")]),t._v(" "),n("li",[t._v("极其简洁的 "),n("code",[t._v("node_modules")]),t._v(" 目录")]),t._v(" "),n("li",[t._v("避免了开发时使用间接依赖的问题")]),t._v(" "),n("li",[t._v("能极大的降低磁盘空间的占用")])]),t._v(" "),n("h3",{attrs:{id:"安装和使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装和使用"}},[t._v("#")]),t._v(" 安装和使用")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局安装 pnpm")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("之后在使用时，只需要把 "),n("code",[t._v("npm")]),t._v(" 替换为 "),n("code",[t._v("pnpm")]),t._v(" 即可。")]),t._v(" "),n("p",[t._v("如果要执行安装在本地的 CLI，可以使用 "),n("code",[t._v("pnpx")]),t._v("，它和 "),n("code",[t._v("npx")]),t._v(" 的功能完全一样，唯一不同的是，在使用 "),n("code",[t._v("pnpx")]),t._v(" 执行一个需要安装的命令时，会使用 "),n("code",[t._v("pnpm")]),t._v(" 进行安装。")]),t._v(" "),n("p",[t._v("比如 "),n("code",[t._v("npx mocha")]),t._v(" 执行本地的 "),n("code",[t._v("mocha")]),t._v(" 命令时，如果 "),n("code",[t._v("mocha")]),t._v(" 没有安装，则 npx 会自动的、临时的安装 mocha，安装好后，自动运行 mocha 命令。")]),t._v(" "),n("h3",{attrs:{id:"pnpm-安装机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pnpm-安装机制"}},[t._v("#")]),t._v(" pnpm 安装机制")]),t._v(" "),n("ul",[n("li",[t._v("同 yarn 和 npm 一样，pnpm 仍然使用缓存来保存已经安装过的包，以及使用 "),n("code",[t._v("pnpm-lock.yaml")]),t._v(" 来记录详细的依赖版本。")]),t._v(" "),n("li",[t._v("不同于 yarn 和 npm， pnpm 使用符号链接和硬链接（可将它们想象成快捷方式）的做法来放置依赖，从而规避了从缓存中拷贝文件的时间，使得安装和卸载的速度更快。")]),t._v(" "),n("li",[t._v("由于使用了符号链接和硬链接，pnpm 可以规避 Windows 操作系统路径过长的问题，因此，它选择使用树形的依赖结果，有着几乎完美的依赖管理。也因为如此，项目中只能使用直接依赖，而不能使用间接依赖。")])]),t._v(" "),n("p",[t._v("（完）")])])}),[],!1,null,null,null);a.default=e.exports}}]);