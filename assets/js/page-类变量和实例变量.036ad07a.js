(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{647:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"类变量和实例变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类变量和实例变量"}},[s._v("#")]),s._v(" 类变量和实例变量")]),s._v(" "),a("blockquote",[a("p",[s._v("有的人也会把类变量称为类属性，把实例变量称为实例属性。")])]),s._v(" "),a("h2",{attrs:{id:"类变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类变量"}},[s._v("#")]),s._v(" 类变量")]),s._v(" "),a("p",[s._v("定义在类中，方法之外的变量，称作类变量。类变量是所有实例公有的变量，每一个实例都可以访问、修改类变量。")]),s._v(" "),a("h3",{attrs:{id:"定义方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义方式"}},[s._v("#")]),s._v(" 定义方式")]),s._v(" "),a("p",[s._v("类变量在类中的定义：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" 类名：\n    类变量"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 值\n    类变量"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 值\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"调用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用方式"}},[s._v("#")]),s._v(" 调用方式")]),s._v(" "),a("p",[s._v("可以通过类名或者实例名加圆点的方式访问类变量，比如：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("Student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classroom\nStudent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("也可以使用实例变量去访问类变量，此时实例会先在自己的实例变量列表里查找是否有这个实例变量，如果没有，那么它就会去类变量列表里找，如果还没有，弹出异常。")]),s._v(" "),a("p",[s._v("不过，为了防止发生一些混淆情况，"),a("strong",[s._v("对于类变量，最好只使用 "),a("code",[s._v("类名.类变量")]),s._v(" 的访问方式，不要用实例去访问类变量")]),s._v("。")]),s._v(" "),a("p",[s._v("Python 动态语言的特点，让我们也可以给实例添加新的实例变量，给类添加新的类变量和方法，或给已有的变量或方法重新赋值。"),a("strong",[s._v("但是会有一个坑")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("通过 "),a("code",[s._v("类名.xxx")]),s._v(" 修改类变量的值，会影响所有的实例化对象。")]),s._v(" "),a("li",[s._v("通过 "),a("code",[s._v("实例对象.xxx")]),s._v(" 修改类变量的值，本质上并不是修改类变量的值，而是在定义一个新的实例变量。")])]),s._v(" "),a("h2",{attrs:{id:"实例变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例变量"}},[s._v("#")]),s._v(" 实例变量")]),s._v(" "),a("p",[s._v("实例变量指的是实例本身拥有的变量。每个实例的变量在内存中都不一样。只能通过实例对象访问，无法通过类名访问。")]),s._v(" "),a("h3",{attrs:{id:"定义方式-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义方式-2"}},[s._v("#")]),s._v(" 定义方式")]),s._v(" "),a("p",[s._v("一般情况下，会在类中 "),a("code",[s._v("__init__")]),s._v(" 方法声明实例变量并赋初值，但也可以在类中的实例方法里声明实例变量。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" 类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在方法内部，通过 self.变量名 的方式定义的变量就是实例变量")]),s._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("实例变量"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 值\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("实例变量"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 值\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下面定义了一个 func 实例方法")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("实例变量"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 值\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ul",[a("li",[s._v("重点："),a("code",[s._v("__init__")]),s._v(" 会在实例化对象的时候自动调用，因此对象创建成功就有 "),a("code",[s._v("实例变量1")]),s._v("、"),a("code",[s._v("实例变量2")]),s._v(" 两个实例属性")]),s._v(" "),a("li",[s._v("调用 "),a("code",[s._v("func()")]),s._v(" 方法之后才有第三个实例属性 "),a("code",[s._v("实例变量3")])])]),s._v(" "),a("h3",{attrs:{id:"调用方式-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用方式-2"}},[s._v("#")]),s._v(" 调用方式")]),s._v(" "),a("p",[s._v("可以通过实例名加圆点的方式调用实例变量，比如：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" new Student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'张三'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \np2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" new Student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'李四'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("不推荐实例变量和类变量同名")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("类中，实例变量和类变量可以同名")]),s._v(" "),a("li",[s._v("但这种情况下使用实例对象"),a("strong",[s._v("将无法调用")]),s._v("类变量，它会首选实例变量，无论这个变量是否已定义")]),s._v(" "),a("li",[s._v("实例对象绑定新的实例属性时，会直接「覆盖」掉重名的类属性（这里的覆盖指的是会创建一个同名的实例变量）")])]),s._v(" "),a("h2",{attrs:{id:"类变量和实例变量区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类变量和实例变量区别"}},[s._v("#")]),s._v(" 类变量和实例变量区别")]),s._v(" "),a("ul",[a("li",[s._v("类变量，所有实例对象共享该变量")]),s._v(" "),a("li",[s._v("实例变量，属于某一个实例对象，用于描述具体的对象")])]),s._v(" "),a("h2",{attrs:{id:"类里面的三种类型变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类里面的三种类型变量"}},[s._v("#")]),s._v(" 类里面的三种类型变量")]),s._v(" "),a("ul",[a("li",[s._v("在所有方法之外定义的变量，称为类变量")]),s._v(" "),a("li",[s._v("在方法内部，通过 "),a("code",[s._v("self.变量名")]),s._v(" 方式定义的变量，称为实例变量")]),s._v(" "),a("li",[s._v("在方法内部，通过 "),a("code",[s._v("变量名=变量值")]),s._v(" 方式定义的变量，称为局部变量")])]),s._v(" "),a("p",[s._v("（完）")])])}),[],!1,null,null,null);t.default=e.exports}}]);