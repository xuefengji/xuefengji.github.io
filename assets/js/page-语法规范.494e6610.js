(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{536:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"语法规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法规范"}},[s._v("#")]),s._v(" 语法规范")]),s._v(" "),a("h2",{attrs:{id:"_1-标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-标识符"}},[s._v("#")]),s._v(" 1. 标识符")]),s._v(" "),a("p",[s._v("所谓的标识符就是对变量、常量、函数、类等对象起的名字。")]),s._v(" "),a("p",[s._v("Python 对于标识符的命名有如下规定：")]),s._v(" "),a("h4",{attrs:{id:"_1）第一个字符必须是字母表中的字母或下划线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1）第一个字符必须是字母表中的字母或下划线"}},[s._v("#")]),s._v(" 1）第一个字符必须是字母表中的字母或下划线 "),a("code",[s._v("_")])]),s._v(" "),a("p",[s._v("值得注意的是，在 Python 中以下划线开头的标识符通常都有特殊意义：")]),s._v(" "),a("ul",[a("li",[s._v("以单下划线开头的变量，例如 "),a("code",[s._v("_foo")]),s._v(" 代表禁止外部访问的类成员，需通过类提供的接口进行访问，不能用 "),a("code",[s._v("from xxx import *")]),s._v(" 导入。")]),s._v(" "),a("li",[s._v("以双下划线开头的，例如 "),a("code",[s._v("__foo")]),s._v(" 代表类的私有成员。")]),s._v(" "),a("li",[s._v("以双下划线开头和结尾的是 Python 里特殊方法专用的标识，如 "),a("code",[s._v("__init__()")]),s._v(" 代表类的构造函数。")])]),s._v(" "),a("h4",{attrs:{id:"_2）标识符的其他的部分由字母、数字和下划线组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2）标识符的其他的部分由字母、数字和下划线组成"}},[s._v("#")]),s._v(" 2）标识符的其他的部分由字母、数字和下划线组成")]),s._v(" "),a("h4",{attrs:{id:"_3）标识符对大小写敏感"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3）标识符对大小写敏感"}},[s._v("#")]),s._v(" 3）标识符对大小写敏感")]),s._v(" "),a("p",[s._v("事实上 Python 语言在任何场景都严格区分大小写。")]),s._v(" "),a("h4",{attrs:{id:"_4）变量名全部小写，常量名全部大写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4）变量名全部小写，常量名全部大写"}},[s._v("#")]),s._v(" 4）变量名全部小写，常量名全部大写")]),s._v(" "),a("p",[s._v("这条不能算语法层面的要求，而是代码规范的要求。")]),s._v(" "),a("h4",{attrs:{id:"_5）函数和方法名用小写加下划线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5）函数和方法名用小写加下划线"}},[s._v("#")]),s._v(" 5）函数和方法名用小写加下划线")]),s._v(" "),a("p",[s._v("也不是语法强制，而是代码规范，我们在定义一个函数或者方法的名字的时候，应尽量用类似 "),a("code",[s._v("get_students")]),s._v("、"),a("code",[s._v("add_student")]),s._v("、"),a("code",[s._v("update_student")]),s._v(" 之类的命名方式。")]),s._v(" "),a("h4",{attrs:{id:"_6）类名用大写驼峰"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6）类名用大写驼峰"}},[s._v("#")]),s._v(" 6）类名用大写驼峰")]),s._v(" "),a("p",[s._v("同样也不是语法强制，而是代码规范。所谓的大写驼峰指的是每个单词的首字母大写。例如 "),a("code",[s._v("Student")]),s._v("、"),a("code",[s._v("StudentConfig")]),s._v(" 等等。")]),s._v(" "),a("h4",{attrs:{id:"_7）模块和包的名字用小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7）模块和包的名字用小写"}},[s._v("#")]),s._v(" 7）模块和包的名字用小写")]),s._v(" "),a("p",[s._v("模块和包的名字尽量用小写，并且不能和标准库以及著名的第三方库同名。")]),s._v(" "),a("h2",{attrs:{id:"_2-保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-保留字"}},[s._v("#")]),s._v(" 2. 保留字")]),s._v(" "),a("p",[s._v("Python 保留字，也叫关键字，是 Python 语言官方确定的用作语法功能的专用标识符，不能把它们用作任何自定义标识符名称。关键字只包含小写字母。")]),s._v(" "),a("p",[s._v("Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" keyword\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("keyword"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("kwlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"_3-注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-注释"}},[s._v("#")]),s._v(" 3. 注释")]),s._v(" "),a("h4",{attrs:{id:"单行注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单行注释"}},[s._v("#")]),s._v(" 单行注释")]),s._v(" "),a("p",[s._v("以符号 "),a("code",[s._v("#")]),s._v(" 为单行注释的开始，从它往后到本行的末尾，都是注释内容。")]),s._v(" "),a("h4",{attrs:{id:"多行注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行注释"}},[s._v("#")]),s._v(" 多行注释")]),s._v(" "),a("p",[s._v("Python 没有真正意义上的多行注释（块注释）语法。你只能在每行的开头打上 "),a("code",[s._v("#")]),s._v(" 号，然后在有多行注释内容时，使用多个单行注释。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一行注释")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二行注释")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第三行注释")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h4",{attrs:{id:"文件注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件注释"}},[s._v("#")]),s._v(" 文件注释")]),s._v(" "),a("p",[s._v("在某些特定的位置，用三引号包括起来的部分，也被当做注释。但是，这种注释有专门的作用，用于为 "),a("code",[s._v("__doc__")]),s._v(" 提供文档内容，这些内容可以通过现成的工具，自动收集起来，形成帮助文档。")]),s._v(" "),a("p",[s._v("例如，函数和类的说明文档：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    这个是函数的说明文档。\n    :param a: 加数\n    :param b: 加数\n    :return: 和\n    """')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    这个类初始化了一个age变量\n    """')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" age\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[a("strong",[s._v("需要强调的是这类注释必须紧跟在定义体下面，不能在任意位置")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"_4-代码头两行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-代码头两行"}},[s._v("#")]),s._v(" 4. 代码头两行")]),s._v(" "),a("p",[s._v("很多时候，我们在一些 Python 脚本文件的开头都能看到类似的以 "),a("code",[s._v("#")]),s._v(" 开头的这样两行代码，它们不是注释，是一些设定。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env python")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -*- coding: utf-8 -*-")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("第一行")]),s._v("：用于指定运行该脚本的 Python 解释器，Linux 专用，Windows 不需要。env 方式下，系统会自动使用环境变量里指向的 Python。")]),s._v(" "),a("p",[s._v("在 Linux 下使用形如 "),a("code",[s._v("./test.py")]),s._v(" 的方式执行脚本时，该行设置生效；在使用类似 "),a("code",[s._v("python test.py")]),s._v(" 或者 "),a("code",[s._v("python3 test.py")]),s._v("的执行方式时，这一行不起作用。")]),s._v(" "),a("p",[a("strong",[s._v("第二行")]),s._v("：代码的编码方式。不是程序要处理的数据的编码方式，而是程序自己本身的字符编码。在 Python3 中，已经全面支持 Unicode，默认以 UTF-8 编码，我们不用再纠结中文和乱码的问题，所以本行其实可以不需要。")]),s._v(" "),a("p",[s._v("PS：这里的 "),a("code",[s._v("-*-")]),s._v(" 没有特别的作用，仅是为了美观好看的装饰。")]),s._v(" "),a("p",[s._v("（完）")])])}),[],!1,null,null,null);t.default=e.exports}}]);