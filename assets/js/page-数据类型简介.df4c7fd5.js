(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{704:function(v,t,_){"use strict";_.r(t);var l=_(1),e=Object(l.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"数据类型简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据类型简介"}},[v._v("#")]),v._v(" 数据类型简介")]),v._v(" "),_("p",[v._v("TypeScript 与普通 JavaScript 最大的区别就是对类型的强定义，它给 JavaScript 带来了多种基本类型，同时开发者也可以通过 TypeScript 来自定义拓展类型。")]),v._v(" "),_("p",[v._v("本文总体介绍 TypeScript 的数据类型有哪些，后面的章节会逐一进行详解。")]),v._v(" "),_("h2",{attrs:{id:"基本类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本类型"}},[v._v("#")]),v._v(" 基本类型")]),v._v(" "),_("ul",[_("li",[v._v("boolean   布尔类型")]),v._v(" "),_("li",[v._v("number    数字类型（整数和浮点数）")]),v._v(" "),_("li",[v._v("string    字符串类型")]),v._v(" "),_("li",[v._v("array     数组类型")]),v._v(" "),_("li",[v._v("null      null类型")]),v._v(" "),_("li",[v._v("undefined undefined类型")]),v._v(" "),_("li",[v._v("object    对象类型")]),v._v(" "),_("li",[v._v("tuple     元组类型")]),v._v(" "),_("li",[v._v("enum      枚举类型")]),v._v(" "),_("li",[v._v("void")]),v._v(" "),_("li",[v._v("never")]),v._v(" "),_("li",[v._v("any")])]),v._v(" "),_("h2",{attrs:{id:"高级类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#高级类型"}},[v._v("#")]),v._v(" 高级类型")]),v._v(" "),_("ul",[_("li",[v._v("union     组合类型")]),v._v(" "),_("li",[v._v("Nullable  可空类型")]),v._v(" "),_("li",[v._v("Literal   预定义文件类型")])]),v._v(" "),_("p",[v._v("（完）")])])}),[],!1,null,null,null);t.default=e.exports}}]);