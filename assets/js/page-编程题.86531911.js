(window.webpackJsonp=window.webpackJsonp||[]).push([[323],{1285:function(t,a,s){"use strict";s.r(a);var r=s(1),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"编程题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程题"}},[t._v("#")]),t._v(" 编程题")]),t._v(" "),s("h2",{attrs:{id:"_1-冒泡排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-冒泡排序"}},[t._v("#")]),t._v(" 1. 冒泡排序")]),t._v(" "),s("h2",{attrs:{id:"_2-1-9999数列中数字3出现的次数。用递推方法解出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-9999数列中数字3出现的次数。用递推方法解出"}},[t._v("#")]),t._v(" 2. 1~9999数列中数字3出现的次数。用递推方法解出")]),t._v(" "),s("h2",{attrs:{id:"_3-从一个数组中找出前4个最大的数-用最优解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-从一个数组中找出前4个最大的数-用最优解"}},[t._v("#")]),t._v(" 3. 从一个数组中找出前4个最大的数，用最优解")])])}),[],!1,null,null,null);a.default=e.exports}}]);