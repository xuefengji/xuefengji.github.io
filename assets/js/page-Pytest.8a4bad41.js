(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{1226:function(t,s,e){"use strict";e.r(s);var v=e(1),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"pytest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pytest"}},[t._v("#")]),t._v(" Pytest")]),t._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("p",[t._v("Pytest 是 Python 的一种单元测试框架，与 Python 自带的 Unittest 测试框架类似，但是比 Unittest 框架使用起来更简洁，效率更高")]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ul",[e("li",[t._v("非常容易上手，入门简单，文档丰富，文档中有很多实例可以参考")]),t._v(" "),e("li",[t._v("能够支持简单的单元测试和复杂的功能测试")]),t._v(" "),e("li",[t._v("支持参数化")]),t._v(" "),e("li",[t._v("执行测试过程中可以将某些测试跳过（skip），或者对某些预期失败的 case 标记成失败")]),t._v(" "),e("li",[t._v("支持重复执行(rerun)失败的 case")]),t._v(" "),e("li",[t._v("支持运行由 nose, Unittest 编写的测试 case")]),t._v(" "),e("li",[t._v("可生成 html 报告")]),t._v(" "),e("li",[t._v("方便的和持续集成工具 jenkins 集成")]),t._v(" "),e("li",[t._v("可支持执行部分用例")]),t._v(" "),e("li",[t._v("具有很多第三方插件，并且可以自定义扩展")])])])}),[],!1,null,null,null);s.default=_.exports}}]);