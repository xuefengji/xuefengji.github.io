(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{1265:function(v,_,t){"use strict";t.r(_);var l=t(1),a=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"测试基础篇"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试基础篇"}},[v._v("#")]),v._v(" 测试基础篇")]),v._v(" "),t("h1",{attrs:{id:"如何制定测试计划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何制定测试计划"}},[v._v("#")]),v._v(" 如何制定测试计划")]),v._v(" "),t("p",[t("strong",[v._v("包含：")])]),v._v(" "),t("ul",[t("li",[v._v("测试目标")]),v._v(" "),t("li",[v._v("测试范围")]),v._v(" "),t("li",[v._v("测试环境")]),v._v(" "),t("li",[v._v("测试类型")]),v._v(" "),t("li",[v._v("测试工具")]),v._v(" "),t("li",[v._v("模块划分：根据测试人员对于业务的熟悉及个人能力进行分配")]),v._v(" "),t("li",[v._v("测试负责人")]),v._v(" "),t("li",[v._v("测试执行轮次时间安排")]),v._v(" "),t("li",[v._v("相关文档在文档管理库中的位置")]),v._v(" "),t("li",[v._v("测试的风险")])]),v._v(" "),t("h2",{attrs:{id:"功能测试用例一般包含哪些内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能测试用例一般包含哪些内容"}},[v._v("#")]),v._v(" 功能测试用例一般包含哪些内容")]),v._v(" "),t("p",[v._v("要素：")]),v._v(" "),t("ul",[t("li",[v._v("用例编号")]),v._v(" "),t("li",[v._v("用例优先级：核心要素")]),v._v(" "),t("li",[v._v("测试目的：核心要素")]),v._v(" "),t("li",[v._v("所属模块")]),v._v(" "),t("li",[v._v("前提条件")]),v._v(" "),t("li",[v._v("测试环境")]),v._v(" "),t("li",[v._v("输入数据")]),v._v(" "),t("li",[v._v("测试步骤")]),v._v(" "),t("li",[v._v("预期结果：核心要素")]),v._v(" "),t("li",[v._v("测试脚本等")])]),v._v(" "),t("h2",{attrs:{id:"黑盒测试用例设计方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#黑盒测试用例设计方法"}},[v._v("#")]),v._v(" 黑盒测试用例设计方法")]),v._v(" "),t("p",[v._v("常用的方法：")]),v._v(" "),t("ul",[t("li",[v._v("等价类划分")]),v._v(" "),t("li",[v._v("边界值")]),v._v(" "),t("li",[v._v("错误推测")]),v._v(" "),t("li",[v._v("因果图")]),v._v(" "),t("li",[v._v("判定表")]),v._v(" "),t("li",[v._v("正交分解")]),v._v(" "),t("li",[v._v("全局探索式")]),v._v(" "),t("li",[v._v("场景分析")])]),v._v(" "),t("h2",{attrs:{id:"什么是回归测试-如何做回归测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是回归测试-如何做回归测试"}},[v._v("#")]),v._v(" 什么是回归测试？如何做回归测试")]),v._v(" "),t("p",[t("strong",[v._v("回归测试")]),v._v("：")]),v._v(" "),t("p",[v._v("在软件生命周期，只要软件发生了改变，就可能给该软件产生问题，每当软件发生改变时我们就必须重新测试现有的功能，以确定是否达到了预期的目的，检查修改是否破坏原有的正常功能")]),v._v(" "),t("p",[t("strong",[v._v("如何做")]),v._v("：")]),v._v(" "),t("ul",[t("li",[v._v("在测试策略制定阶段，制定回归测试策略")]),v._v(" "),t("li",[v._v("确定需要回归测试的版本")]),v._v(" "),t("li",[v._v("回归测试版本发布，按照回归测试策略执行回归测试")]),v._v(" "),t("li",[v._v("回归测试通过，关闭缺陷跟踪单")]),v._v(" "),t("li",[v._v("回归测试不通过，缺陷跟踪单返回开发人员，开发重新修改再次提交测试回归")])]),v._v(" "),t("h2",{attrs:{id:"在项目中如何保证软件质量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在项目中如何保证软件质量"}},[v._v("#")]),v._v(" 在项目中如何保证软件质量")]),v._v(" "),t("p",[v._v("项目质量不是仅仅靠某个人来保障，而是整个团队整体一起努力的结果：\n产品：保证迭代过程中的产品逻辑，对于可能的兼容，升级做出预判，并给出方案\n设计：满足产品表达的同时，保证设计的延续性\n开发：产品细节的保证，技术方案选择要严谨，考虑兼容、性能，开发完成后要充分自测，严格遵循开发  规范操作\n测试：验证产品逻辑，站在用户角度对交互设计进行系统验证，尽可能多的使用技术手段保证测试质量")]),v._v(" "),t("h2",{attrs:{id:"遇到概率性-bug-怎么办"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遇到概率性-bug-怎么办"}},[v._v("#")]),v._v(" 遇到概率性 bug 怎么办")]),v._v(" "),t("ul",[t("li",[v._v("首先明确该类 bug 也需要提单，描述清楚一些操作环境、步骤、数据，并备注可能产生的原因")]),v._v(" "),t("li",[v._v("使用排除法、错误推断法查找规律，可以找开发、项目经理一起定位分析讨论")]),v._v(" "),t("li",[v._v("如最后未解决，需要在测试报告中体现，并分析可能造成的影响，权衡该 bug 是否可留")])])])}),[],!1,null,null,null);_.default=a.exports}}]);