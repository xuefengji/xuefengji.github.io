(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{627:function(t,v,a){t.exports=a.p+"assets/img/vue-versions.bf8ee1bb.png"},889:function(t,v,a){"use strict";a.r(v);var e=a(1),_=Object(e.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"版本号定义规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本号定义规范"}},[t._v("#")]),t._v(" 版本号定义规范")]),t._v(" "),e("h2",{attrs:{id:"开源项目示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开源项目示例"}},[t._v("#")]),t._v(" 开源项目示例")]),t._v(" "),e("p",[t._v("下图是目前最流行的前端框架之一的 vue 近期版本发布记录，截图来自 "),e("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("npmjs.com"),e("OutboundLink")],1),t._v("：")]),t._v(" "),e("div",{staticStyle:{"text-align":"center"}},[e("img",{staticStyle:{width:"540px"},attrs:{src:a(627),alt:"vue 版本发布记录"}}),t._v(" "),e("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（vue 版本发布记录）")])]),t._v(" "),e("p",[t._v("从上图不难看出：")]),t._v(" "),e("ul",[e("li",[t._v("vue 的版本号通常由三位组成，形如：X.Y.Z")]),t._v(" "),e("li",[t._v("版本是严格递增的，此处是：3.2.0 -> 3.2.1 -> 3.2.2")]),t._v(" "),e("li",[t._v("在发布重要版本时，可以发布 alpha，rc 等先行版本")]),t._v(" "),e("li",[t._v("alpha 和 rc 等修饰版本的关键字后面可以带上次数和 meta 信息")]),t._v(" "),e("li",[t._v("可以说，vue 发布版本时做的相当到位，版本给人的感觉非常清晰，也很严谨。这得益于 Semver（语义化版本） 规范的功劳。")])]),t._v(" "),e("h2",{attrs:{id:"语义化版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语义化版本"}},[t._v("#")]),t._v(" 语义化版本")]),t._v(" "),e("p",[t._v("项目的版本号应该根据某些规则进行迭代，这里推荐使用"),e("a",{attrs:{href:"https://semver.org/lang/zh-CN/",target:"_blank",rel:"noopener noreferrer"}},[t._v("语义化版本"),e("OutboundLink")],1),t._v("规范，通过这个规范，用户可以了解版本变更的影响范围。规则如下：")]),t._v(" "),e("ul",[e("li",[t._v("主版本号（major）：当你做了不兼容的 API 修改。")]),t._v(" "),e("li",[t._v("次版本号（minor）：当你做了向下兼容的功能性新增，可以理解为 Feature 版本。")]),t._v(" "),e("li",[t._v("修订号（patch）：当你做了向下兼容的问题修正，可以理解为 Bug fix 版本。")])]),t._v(" "),e("p",[t._v("先行版本号及版本编译信息可以加到「主版本号.次版本号.修订号」的后面，作为延伸。")]),t._v(" "),e("h2",{attrs:{id:"先行版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先行版本"}},[t._v("#")]),t._v(" 先行版本")]),t._v(" "),e("p",[t._v("当要发布"),e("strong",[t._v("大版本")]),t._v("或者"),e("strong",[t._v("核心的 Feature")]),t._v(" 时，但是又不能保证这个版本的功能 100% 正常。这个时候就需要通过发布"),e("strong",[t._v("先行版本")]),t._v("。")]),t._v(" "),e("p",[t._v("比较常见的先行版本包括：内测版、灰度版本和 RC 版本。Semver 规范中使用 alpha、beta、rc（以前叫做 gama）来修饰即将要发布的版本。它们的含义是：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("alpha")]),t._v("：内部版本。此版本表示该软件在此阶段主要是以实现软件功能为主，通常只在软件开发者内部交流，一般而言，该版本软件的 Bug 较多，需要继续修改。")]),t._v(" "),e("li",[e("strong",[t._v("beta")]),t._v("：公测版本。该版本相对于 alpha 版已有了很大的改进，消除了严重的错误，但还是存在着一些缺陷，需要经过多次测试来进一步消除，此版本主要的修改对像是软件的 UI，这个阶段的版本也会一直加入新的功能。")]),t._v(" "),e("li",[e("strong",[t._v("rc")]),t._v("：即 Release candiate，正式版本的候选版本。该版本已经相当成熟了，基本上不存在导致错误的 BUG，与即将发行的正式版相差无几，不会再加入新的功能了，主要着重于除错。")])]),t._v(" "),e("p",[t._v("比如：1.0.0-alpha.0，1.0.0-alpha.1，1.0.0-beta.0，1.0.0-rc.0，1.0.p-rc.1 等版本。alpha，beta，rc 后需要带上次数信息。")]),t._v(" "),e("p",[t._v("最后，当经过这些先行版本的一系列测试之后，终归会有一个正式版本，是最终交付用户使用的一个版本，也就是 Release 版。")]),t._v(" "),e("h2",{attrs:{id:"版本发布准则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本发布准则"}},[t._v("#")]),t._v(" 版本发布准则")]),t._v(" "),e("p",[t._v("列举出比较实用的一些规则：")]),t._v(" "),e("ul",[e("li",[t._v("标准的版本号必须采用 XYZ 的格式，并且 X、Y 和 Z 为非负的整数，禁止在数字前方补零，版本发布需要严格递增。例如：1.9.1 -> 1.10.0 -> 1.11.0。")]),t._v(" "),e("li",[t._v("某个软件版本发行后，任何修改都必须以新版本发行。")]),t._v(" "),e("li",[t._v("1.0.0 的版本号用于界定公共 API。当你的软件发布到了正式环境，或者有稳定的 API 时，就可以发布 1.0.0 版本了。")]),t._v(" "),e("li",[t._v("版本的优先层级指的是不同版本在排序时如何比较。判断优先层级时，必须把版本依序拆分为主版本号、次版本号、修订号及先行版本号后进行比较。")])]),t._v(" "),e("p",[t._v("（完）")])])}),[],!1,null,null,null);v.default=_.exports}}]);