(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{586:function(t,a,s){t.exports=s.p+"assets/img/switch-execution-context-state-in-the-call-stack.84e240ce.png"},587:function(t,a,s){t.exports=s.p+"assets/img/memory-allocation.83c8ffb8.png"},864:function(t,a,s){"use strict";s.r(a);var v=s(1),e=Object(v.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"栈空间和堆空间"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#栈空间和堆空间"}},[t._v("#")]),t._v(" 栈空间和堆空间")]),t._v(" "),v("h2",{attrs:{id:"数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),v("p",[t._v("目前 JavaScript 中的数据类型一共有 8 种，它们分别是：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("类型")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Boolean")]),t._v(" "),v("td",[t._v("只有 "),v("code",[t._v("true")]),t._v(" 和 "),v("code",[t._v("false")]),t._v(" 两个值。")])]),t._v(" "),v("tr",[v("td",[t._v("Null")]),t._v(" "),v("td",[t._v("只有一个值 "),v("code",[t._v("null")]),t._v("。")])]),t._v(" "),v("tr",[v("td",[t._v("Undefined")]),t._v(" "),v("td",[t._v("一个没有被赋值的变量会有个默认值 "),v("code",[t._v("undefined")]),t._v("，变量提升时的默认值也是 "),v("code",[t._v("undefined")]),t._v("。")])]),t._v(" "),v("tr",[v("td",[t._v("Number")]),t._v(" "),v("td",[t._v("根据 ECMAScript 标准，JavaScript 中只有一种数字类型。")])]),t._v(" "),v("tr",[v("td",[t._v("BigInt")]),t._v(" "),v("td",[t._v("ES11 引入的一种新的数字类型，可以用任意精度表示整数。使用 BigInt，即使超出 Number 的安全整数范围限制，也可以安全地存储和操作。")])]),t._v(" "),v("tr",[v("td",[t._v("String")]),t._v(" "),v("td",[t._v("用于表示文本数据。不同于类 C 语言，JavaScript 的字符串是不可更改的。")])]),t._v(" "),v("tr",[v("td",[t._v("Symbol")]),t._v(" "),v("td",[t._v("ES6 引入的一种新的类型，表示唯一的并且是不可修改的，通常用来作为 Object 的 key。")])]),t._v(" "),v("tr",[v("td",[t._v("Object")]),t._v(" "),v("td",[t._v("在 JavaScript 里，对象可以被看作是一组属性的集合。")])])])]),t._v(" "),v("p",[t._v("有三个注意点：")]),t._v(" "),v("ul",[v("li",[t._v("使用 "),v("code",[t._v("typeof")]),t._v(" 检测 Null 类型时，返回的是 "),v("code",[t._v("object")]),t._v("。这是当初 JavaScript 语言的一个 Bug，一直保留至今，之所以一直没修改过来，主要是为了兼容老的代码。\n"),v("blockquote",[v("p",[t._v("在 Javascript 中二进制前三位都为 "),v("code",[t._v("0")]),t._v(" 的话会被判断为 Object 类型，"),v("code",[t._v("null")]),t._v(" 的二进制表示全 "),v("code",[t._v("0")]),t._v("，因此执行 "),v("code",[t._v("typeof null")]),t._v(" 时返回 "),v("code",[t._v("object")]),t._v(" —— 《你不知道的JavaScript（上）》")])])]),t._v(" "),v("li",[t._v("Object 是由 key-value 组成的，其中的 value 可以是任何类型，包括函数，这也就意味着你可以通过 Object 来存储函数，Object 中的函数又称为方法。")]),t._v(" "),v("li",[t._v("前面的 7 种数据类型称为"),v("strong",[t._v("原始类型")]),t._v("，最后一个对象类型称为"),v("strong",[t._v("引用类型")]),t._v("，这两种不同的类型在内存中存放的位置不一样。")])]),t._v(" "),v("h2",{attrs:{id:"内存空间"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存空间"}},[t._v("#")]),t._v(" 内存空间")]),t._v(" "),v("p",[t._v("在 JavaScript 的执行过程中，主要有三种类型内存空间，分别是"),v("strong",[t._v("代码空间")]),t._v("、"),v("strong",[t._v("栈空间")]),t._v("和"),v("strong",[t._v("堆空间")]),t._v("。")]),t._v(" "),v("p",[t._v("其中的代码空间主要是存储可执行代码的，这里主要分析栈空间和堆空间。")]),t._v(" "),v("h3",{attrs:{id:"栈空间"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#栈空间"}},[t._v("#")]),t._v(" 栈空间")]),t._v(" "),v("p",[t._v("栈空间就是经常说的调用栈，用来存储执行上下文。")]),t._v(" "),v("p",[t._v("原始类型的数据值都是直接保存在栈空间中的。")]),t._v(" "),v("h3",{attrs:{id:"堆空间"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#堆空间"}},[t._v("#")]),t._v(" 堆空间")]),t._v(" "),v("p",[t._v("对象类型是存放在堆空间的，在栈空间中只是保留了对象的引用地址，当 JavaScript 需要访问该数据的时候，是通过栈中的引用地址来访问的。")]),t._v(" "),v("h2",{attrs:{id:"为什么分两种空间"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么分两种空间"}},[t._v("#")]),t._v(" 为什么分两种空间")]),t._v(" "),v("p",[v("strong",[t._v("栈空间")]),t._v("主要用来存放一些原始类型的小数据，通常都不会设置太大，因为 JavaScript 引擎需要用栈来维护程序执行期间上下文的状态，如果栈空间大了话，所有的数据都存放在栈空间里面，那么会影响到上下文切换的效率，进而又影响到整个程序的执行效率。")]),t._v(" "),v("details",{staticClass:"custom-block details"},[v("summary",[t._v("执行上下文的切换")]),t._v(" "),v("p",[t._v("例如 foo 函数执行结束了，JavaScript 引擎需要离开当前的执行上下文，只需要将指针下移到上个执行上下文的地址就可以了，foo 函数执行上下文栈区空间全部回收，如下图所示：")]),t._v(" "),v("div",{staticStyle:{"text-align":"center"}},[v("img",{attrs:{src:s(586),alt:"调用栈中切换执行上下文状态"}}),t._v(" "),v("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（调用栈中切换执行上下文状态，图片来源于网络）")])])]),t._v(" "),v("p",[v("strong",[t._v("堆空间")]),t._v("主要用来存放引用类型的数据，这类数据占用的空间都比较大，所以堆空间很大，能存放很多大的数据，不过缺点是分配内存和回收内存都会占用一定的时间。")]),t._v(" "),v("h2",{attrs:{id:"不同数据类型赋值操作的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#不同数据类型赋值操作的区别"}},[t._v("#")]),t._v(" 不同数据类型赋值操作的区别")]),t._v(" "),v("p",[t._v("在 JavaScript 中，原始类型的赋值会完整复制变量值，而引用类型的赋值是复制引用地址。")]),t._v(" "),v("p",[t._v("例如下面代码：")]),t._v(" "),v("div",{staticClass:"language-javascript line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"极客时间"')]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"极客时间"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br")])]),v("p",[t._v("在该代码的执行过程中，变量 a 和变量 b 的值都是存放在栈中的，变量 c 和变量 d 都指向了同一个堆中的对象（因此会有一个变另一个跟着变的现象）。")]),t._v(" "),v("p",[t._v("其内存示意图如下图所示：")]),t._v(" "),v("div",{staticStyle:{"text-align":"center"}},[v("img",{staticStyle:{width:"600px"},attrs:{src:s(587),alt:"内存示意图"}}),t._v(" "),v("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（内存示意图，图片来源于网络）")])]),t._v(" "),v("p",[t._v("（完）")])])}),[],!1,null,null,null);a.default=e.exports}}]);