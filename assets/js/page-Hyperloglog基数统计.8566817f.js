(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{1163:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"hyperloglog-基数统计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hyperloglog-基数统计"}},[t._v("#")]),t._v(" Hyperloglog 基数统计")]),t._v(" "),a("ul",[a("li",[t._v("Redis 2.8.9 版本就更新了 Hyperloglog 数据结构")]),t._v(" "),a("li",[t._v("Redis Hyperloglog 基数统计的算法")]),t._v(" "),a("li",[t._v("底层使用 String 数据类型")])]),t._v(" "),a("h2",{attrs:{id:"什么是基数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是基数"}},[t._v("#")]),t._v(" 什么是基数")]),t._v(" "),a("p",[t._v("数据集中不重复的元素的个数")]),t._v(" "),a("p",[t._v("比如：{1, 3, 5, 7, 5, 7, 8}")]),t._v(" "),a("p",[t._v("那这个数据集的基数就是 5")]),t._v(" "),a("h2",{attrs:{id:"命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),a("h3",{attrs:{id:"pfadd-pfcount-pfmerge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pfadd-pfcount-pfmerge"}},[t._v("#")]),t._v(" pfadd/pfcount/pfmerge")]),t._v(" "),a("p",[t._v("pfadd：添加指定元素到 HyperLogLog 中")]),t._v(" "),a("p",[t._v("pfcount：统计指定元素的基数数量")]),t._v(" "),a("p",[t._v("pfmerge：合并 2 组 HyperLogLog 中的元素，取并集")]),t._v(" "),a("p",[a("strong",[t._v("语法")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pfadd key element "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\npfcount key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\npfmerge destkey sourcekey "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sourcekey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" pfadd mykey a b c d e f j  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建第一组元素 mykey")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" pfcount mykey     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 统计 mykey 元素的基数数量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" pfadd mykey2 i j a z c x b     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建第二组元素 mykey2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" pfcount mykey2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" pfmerge mykey3 mykey mykey2   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并 mykey 和 mykey2 =》mykey3")]),t._v("\nOK\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(" pfcount mykey3   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看并集的基数数量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h2",{attrs:{id:"应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),a("p",[t._v("网页的访问量（UV）：一个用户多次访问，也只能算作一个人")]),t._v(" "),a("p",[t._v("传统方式：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("存储用户的id,然后每次进行比较")])]),t._v(" "),a("li",[a("p",[t._v("当用户变多之后这种方式及其浪费空间，而我们的目的只是"),a("strong",[t._v("计数")])])]),t._v(" "),a("li",[a("p",[t._v("Hyperloglog 就能帮助我们利用最小的空间完成")])])]),t._v(" "),a("p",[a("strong",[t._v("Hyperloglog 优点")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("占用的内存是固定的")])]),t._v(" "),a("li",[a("p",[t._v("2^64 个不同元素的基数，只需要 12 KB 内存")])]),t._v(" "),a("li",[a("p",[t._v("HyperLogLog 只会根据输入元素来计算基数，而不会储存输入元素本身")])])]),t._v(" "),a("p",[a("strong",[t._v("Hyperloglog 缺点")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("会有 0.81% 的错误率")])]),t._v(" "),a("li",[a("p",[t._v("如果允许容错，那么一定可以使用 Hyperloglog")])]),t._v(" "),a("li",[a("p",[t._v("如果不允许容错，就使用 Set 或者自己的数据类型即可")])])]),t._v(" "),a("h2",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.redis.net.cn/tutorial/3513.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("（完）")])])}),[],!1,null,null,null);s.default=n.exports}}]);