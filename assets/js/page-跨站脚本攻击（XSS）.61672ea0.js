(window.webpackJsonp=window.webpackJsonp||[]).push([[249],{448:function(t,a,s){t.exports=s.p+"assets/img/http-only.7779200d.jpg"},709:function(t,a,s){"use strict";s.r(a);var e=s(1),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"跨站脚本攻击-xss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨站脚本攻击-xss"}},[t._v("#")]),t._v(" 跨站脚本攻击（XSS）")]),t._v(" "),e("h2",{attrs:{id:"什么是-xss-攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-xss-攻击"}},[t._v("#")]),t._v(" 什么是 XSS 攻击")]),t._v(" "),e("p",[t._v("XSS 攻击全称是跨站脚本攻击，它是因为同源策略支持了页面中的第三方资源引用和 CORS，所带来的安全问题。")]),t._v(" "),e("p",[t._v("这种攻击是指黑客往 HTML 文件中或者 DOM 中注入恶意脚本，从而在用户浏览页面时利用注入的恶意脚本对用户实施攻击的一种手段。")]),t._v(" "),e("h2",{attrs:{id:"xss-的攻击方向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss-的攻击方向"}},[t._v("#")]),t._v(" XSS 的攻击方向")]),t._v(" "),e("p",[t._v("如果页面被注入了恶意 JavaScript 脚本，恶意脚本可以做这些事：")]),t._v(" "),e("ul",[e("li",[t._v("窃取 Cookie 信息\n"),e("ul",[e("li",[t._v("它可以通过 "),e("code",[t._v("document.cookie")]),t._v(" 获取 Cookie 信息，然后通过 XMLHttpRequest 或者 Fetch 加上 CORS 功能将数据发送给恶意服务器。")])])]),t._v(" "),e("li",[t._v("监听用户行为\n"),e("ul",[e("li",[t._v("它可以使用 "),e("code",[t._v("addEventListener")]),t._v(" 接口来监听键盘事件，比如可以获取用户输入的信用卡等信息，将其发送到恶意服务器。")])])]),t._v(" "),e("li",[t._v("修改 DOM\n"),e("ul",[e("li",[t._v("它可以通过修改 DOM 伪造假的登录窗口，用来欺骗用户输入用户名和密码等信息。")])])]),t._v(" "),e("li",[t._v("在页面内生成浮窗广告\n"),e("ul",[e("li",[t._v("这些广告会严重地影响用户体验。")])])])]),t._v(" "),e("p",[t._v("除了以上几种情况外，恶意脚本还能做很多其他的事情。总之，如果让页面插入了恶意脚本，那么就相当于把我们页面的隐私数据和行为完全暴露给黑客了。")]),t._v(" "),e("h2",{attrs:{id:"恶意脚本是怎么注入的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#恶意脚本是怎么注入的"}},[t._v("#")]),t._v(" 恶意脚本是怎么注入的")]),t._v(" "),e("h3",{attrs:{id:"存储型-xss-攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储型-xss-攻击"}},[t._v("#")]),t._v(" 存储型 XSS 攻击")]),t._v(" "),e("ul",[e("li",[t._v("首先黑客利用站点漏洞将一段恶意 JavaScript 代码提交到网站的数据库中（比如表单项里填写一段引用外部 JS 的语句）。")]),t._v(" "),e("li",[t._v("然后用户向网站请求包含了恶意 JavaScript 脚本的页面。")]),t._v(" "),e("li",[t._v("当用户浏览该页面的时候，恶意脚本就会将用户的 Cookie 信息等数据上传到服务器。")])]),t._v(" "),e("h3",{attrs:{id:"反射型-xss-攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反射型-xss-攻击"}},[t._v("#")]),t._v(" 反射型 XSS 攻击")]),t._v(" "),e("p",[t._v("在反射型 XSS 攻击过程中，恶意 JavaScript 脚本属于用户发送给网站请求中的一部分，随后网站又把恶意 JavaScript 脚本返回给用户。当恶意 JavaScript 脚本在用户页面中被执行时，黑客就可以利用该脚本做一些恶意操作。")]),t._v(" "),e("p",[t._v("常见的触发攻击的方式是将含有攻击内容的参数拼接在 URL 后面，比如黑客经常会通过 QQ 群或者邮件等渠道诱导用户去点击这些恶意链接，所以对于一些链接我们一定要慎之又慎。")]),t._v(" "),e("h3",{attrs:{id:"基于-dom-的-xss-攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-dom-的-xss-攻击"}},[t._v("#")]),t._v(" 基于 DOM 的 XSS 攻击")]),t._v(" "),e("p",[t._v("这种攻击是不牵涉到页面 Web 服务器的。具体来讲，黑客通过各种手段将恶意脚本注入用户的页面中，比如通过网络劫持在页面传输过程中修改 HTML 页面的内容，这种劫持类型很多，有通过 WiFi 路由器劫持的，有通过本地恶意软件来劫持的，它们的共同点是在 Web 资源传输过程或者在用户使用页面的过程中修改 Web 页面的数据。")]),t._v(" "),e("h2",{attrs:{id:"如何阻止-xss-攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何阻止-xss-攻击"}},[t._v("#")]),t._v(" 如何阻止 XSS 攻击")]),t._v(" "),e("h3",{attrs:{id:"服务器对输入脚本进行过滤或转码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器对输入脚本进行过滤或转码"}},[t._v("#")]),t._v(" 服务器对输入脚本进行过滤或转码")]),t._v(" "),e("p",[t._v("对于反射型或者存储型 XSS 攻击，在服务器端将一些关键的字符进行转码，比如：")]),t._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("code:&lt;script>alert('你被xss攻击了')&lt;/script>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("可以直接将后半段代码过滤掉，变成：")]),t._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("code:\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("或者将部分内容进行转码，比如将尖括号和引号转码后变成：")]),t._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("code:&amp;lt;script&amp;gt;alert(&amp;#39;你被xss攻击了&amp;#39;)&amp;lt;/script&amp;gt;\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("经过转码之后的内容返回给页面后，即使是一段攻击脚本，它也不会被执行。")]),t._v(" "),e("h3",{attrs:{id:"充分利用-csp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#充分利用-csp"}},[t._v("#")]),t._v(" 充分利用 CSP")]),t._v(" "),e("p",[t._v("实施严格的 CSP（Content-Security-Policy）可以有效地防范 XSS 攻击，具体来讲 CSP 有如下几个功能：")]),t._v(" "),e("ul",[e("li",[t._v("限制加载其他域下的资源文件，这样即使黑客插入了一个 JavaScript 文件，这个 JavaScript 文件也是无法被加载的。")]),t._v(" "),e("li",[t._v("禁止向第三方域提交数据，这样用户数据也不会外泄。")]),t._v(" "),e("li",[t._v("禁止执行内联脚本和未授权的脚本。")]),t._v(" "),e("li",[t._v("提供上报机制，这样可以帮助我们尽快发现有哪些 XSS 攻击，以便尽快修复问题。")])]),t._v(" "),e("h3",{attrs:{id:"使用-httponly-属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-httponly-属性"}},[t._v("#")]),t._v(" 使用 HttpOnly 属性")]),t._v(" "),e("p",[t._v("由于很多 XSS 攻击都是来盗用 Cookie 的，因此还可以通过使用 "),e("code",[t._v("HttpOnly")]),t._v(" 属性来保护我们 Cookie 的安全。")]),t._v(" "),e("p",[t._v("通常服务器可以将某些 Cookie 设置为 "),e("code",[t._v("HttpOnly")]),t._v(" 标志，"),e("code",[t._v("HttpOnly")]),t._v(" 是服务器通过 HTTP 响应头来设置的，下面是打开 Google 时，HTTP 响应头中的一段：")]),t._v(" "),e("div",{staticClass:"language-text line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("set-cookie: NID=189=M8q2FtWbsR8RlcldPVt7qkrqR38LmFY9jUxkKo3-4Bi6Qu_ocNOat7nkYZUTzolHjFnwBw0izgsATSI7TZyiiiaV94qGh-BzEYsNVa7TZmjAYTxYTOM9L_-0CN9ipL6cXi8l6-z41asXtm2uEwcOC5oh9djkffOMhWqQrlnCtOI; expires=Sat, 18-Apr-2020 06:52:22 GMT; path=/; domain=.google.com; HttpOnly\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("code",[t._v("set-cookie")]),t._v(" 属性值最后使用了 "),e("code",[t._v("HttpOnly")]),t._v(" 来标记该 Cookie。使用 "),e("code",[t._v("HttpOnly")]),t._v(" 标记的 Cookie 只能使用在 HTTP 请求过程中，所以无法通过 JavaScript 来读取这段 Cookie。")]),t._v(" "),e("p",[t._v("还可以通过 Chrome 开发者工具来查看哪些 Cookie 被标记了 HttpOnly，如下图：")]),t._v(" "),e("div",{staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:s(448),alt:"HttpOnly 演示"}}),t._v(" "),e("p",{staticStyle:{"text-align":"center",color:"#888"}},[t._v("（HttpOnly 演示，图来源于学习资料）")])]),t._v(" "),e("p",[t._v("图中 "),e("code",[t._v("NID")]),t._v(" 这个 Cookie 的 "),e("code",[t._v("HttpOnly")]),t._v(" 属性是被勾选上的，所以 "),e("code",[t._v("NID")]),t._v(" 的内容是无法通过 "),e("code",[t._v("document.cookie")]),t._v(" 来读取的。")]),t._v(" "),e("p",[t._v("因此一些比较重要的数据建议设置 "),e("code",[t._v("HttpOnly")]),t._v(" 标志。")]),t._v(" "),e("h2",{attrs:{id:"各岗位防范-xss-攻击的职责"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#各岗位防范-xss-攻击的职责"}},[t._v("#")]),t._v(" 各岗位防范 XSS 攻击的职责")]),t._v(" "),e("p",[t._v("产品：")]),t._v(" "),e("ul",[e("li",[t._v("业务逻辑层面安全验证，保证即使被攻击也要尽量避免或减少损失，如：资金转出、敏感信息操作（修改登录密码、支付密码）等。")])]),t._v(" "),e("p",[t._v("后端：")]),t._v(" "),e("ul",[e("li",[t._v("存储型和反射性 XSS，后端占比较大，考虑到可以通过接口绕过前端，所以内容编码后端处理比较可靠。")]),t._v(" "),e("li",[t._v("重点头信息返回 "),e("code",[t._v("HttpOnly")]),t._v("，这也需要后端实现。")])]),t._v(" "),e("p",[t._v("前端：")]),t._v(" "),e("ul",[e("li",[t._v("基于 DOM 的 XSS 攻击，CSP 等前端技术运用，这边主要是前端。")])]),t._v(" "),e("p",[t._v("测试：")]),t._v(" "),e("ul",[e("li",[t._v("丰富测试框架，正对输入框：长度、类型、是否为空、是否重复、组成范围外，也应了解学习安全性测试：XSS 攻击、SQL 注入等攻击类型。")])]),t._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP",target:"_blank",rel:"noopener noreferrer"}},[t._v("内容安全策略（CSP）"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("（完）")])])}),[],!1,null,null,null);a.default=v.exports}}]);