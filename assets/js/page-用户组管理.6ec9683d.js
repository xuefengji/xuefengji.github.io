(window.webpackJsonp=window.webpackJsonp||[]).push([[305],{1057:function(v,_,p){"use strict";p.r(_);var r=p(1),s=Object(r.a)({},(function(){var v=this,_=v.$createElement,p=v._self._c||_;return p("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[p("h1",{attrs:{id:"用户组管理"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#用户组管理"}},[v._v("#")]),v._v(" 用户组管理")]),v._v(" "),p("p",[v._v("每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建")]),v._v(" "),p("p",[v._v("用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新")]),v._v(" "),p("p",[v._v("增加一个新的用户组使用 "),p("code",[v._v("groupadd")]),v._v(" 命令")]),v._v(" "),p("p",[p("code",[v._v("groupadd")]),v._v(" 选项 用户组\n可以使用的选项有：")]),v._v(" "),p("p",[v._v("-g GID 指定新用户组的组标识号（GID）")]),v._v(" "),p("p",[v._v("-o 一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同")]),v._v(" "),p("p",[v._v("实例1：")]),v._v(" "),p("h2",{attrs:{id:"groupadd-group1"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#groupadd-group1"}},[v._v("#")]),v._v(" groupadd group1")]),v._v(" "),p("p",[v._v("此命令向系统中增加了一个新组group1，新组的组标识号是在当前已有的最大组标识号的基础上加1")]),v._v(" "),p("p",[v._v("实例2：")]),v._v(" "),p("h2",{attrs:{id:"groupadd-g-101-group2"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#groupadd-g-101-group2"}},[v._v("#")]),v._v(" groupadd -g 101 group2")]),v._v(" "),p("p",[v._v("此命令向系统中增加了一个新组group2，同时指定新组的组标识号是101")]),v._v(" "),p("p",[v._v("如果要删除一个已有的用户组，使用groupdel命令")]),v._v(" "),p("p",[v._v("groupdel 用户组\n例如：")]),v._v(" "),p("h2",{attrs:{id:"groupdel-group1"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#groupdel-group1"}},[v._v("#")]),v._v(" groupdel group1")]),v._v(" "),p("p",[v._v("此命令从系统中删除组group1")]),v._v(" "),p("p",[v._v("修改用户组的属性使用groupmod命令")]),v._v(" "),p("p",[v._v("groupmod 选项 用户组\n常用的选项有：")]),v._v(" "),p("p",[v._v("-g GID 为用户组指定新的组标识号。")]),v._v(" "),p("p",[v._v("-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。")]),v._v(" "),p("p",[v._v("-n新用户组 将用户组的名字改为新名字")]),v._v(" "),p("h2",{attrs:{id:"此命令将组group2的组标识号修改为102"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#此命令将组group2的组标识号修改为102"}},[v._v("#")]),v._v(" 此命令将组group2的组标识号修改为102")]),v._v(" "),p("p",[v._v("groupmod -g 102 group2")]),v._v(" "),p("h2",{attrs:{id:"将组group2的标识号改为10000-组名修改为group3"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#将组group2的标识号改为10000-组名修改为group3"}},[v._v("#")]),v._v(" 将组group2的标识号改为10000，组名修改为group3")]),v._v(" "),p("p",[v._v("groupmod –g 10000 -n group3 group2")]),v._v(" "),p("p",[v._v("切换组")]),v._v(" "),p("p",[v._v("如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。")]),v._v(" "),p("p",[v._v("用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如：")]),v._v(" "),p("p",[v._v("$ newgrp root\n这条命令将当前用户切换到root用户组，前提条件是root用户组确实是该用户的主组或附加组。")]),v._v(" "),p("p",[v._v("/etc/passwd")]),v._v(" "),p("p",[v._v("完成用户管理的工作有许多种方法，但是每一种方法实际上都是对有关的系统文件进行修改。")]),v._v(" "),p("p",[v._v("与用户和用户组相关的信息都存放在一些系统文件中，这些文件包括/etc/passwd, /etc/shadow, /etc/group等。")]),v._v(" "),p("p",[v._v("下面分别介绍这些文件的内容。")]),v._v(" "),p("p",[v._v("/etc/passwd文件是用户管理工作涉及的最重要的一个文件。")]),v._v(" "),p("p",[v._v("Linux系统中的每个用户都在/etc/passwd文件中有一个对应的记录行，它记录了这个用户的一些基本属性。")]),v._v(" "),p("p",[v._v("这个文件对所有用户都是可读的。它的内容类似下面的例子：")]),v._v(" "),p("p",[v._v("＃ cat /etc/passwd")]),v._v(" "),p("p",[v._v("root❌0:0:Superuser:/:\ndaemon❌1:1:System daemons:/etc:\nbin❌2:2:Owner of system commands:/bin:\nsys❌3:3:Owner of system files:/usr/sys:\nadm❌4:4:System accounting:/usr/adm:\nuucp❌5:5:UUCP administrator:/usr/lib/uucp:\nauth❌7:21:Authentication administrator:/tcb/files/auth:\ncron❌9:16:Cron daemon:/usr/spool/cron:\nlisten❌37:4:Network daemon:/usr/net/nls:\nlp❌71:18:Printer administrator:/usr/spool/lp:\n从上面的例子我们可以看到，/etc/passwd中一行记录对应着一个用户，每行记录又被冒号(:)分隔为7个字段，其格式和具体含义如下：")]),v._v(" "),p("p",[v._v('用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell\n1）"用户名"是代表用户账号的字符串。')]),v._v(" "),p("p",[v._v("通常长度不超过8个字符，并且由大小写字母和/或数字组成。登录名中不能有冒号(😃，因为冒号在这里是分隔符。")]),v._v(" "),p("p",[v._v("为了兼容起见，登录名中最好不要包含点字符(.)，并且不使用连字符(-)和加号(+)打头。")]),v._v(" "),p("p",[v._v("2）“口令”一些系统中，存放着加密后的用户口令字。")]),v._v(" "),p("p",[v._v("虽然这个字段存放的只是用户口令的加密串，不是明文，但是由于/etc/passwd文件对所有用户都可读，所以这仍是一个安全隐患。因此，现在许多Linux 系统（如SVR4）都使用了shadow技术，把真正的加密后的用户口令字存放到/etc/shadow文件中，而在/etc/passwd文件的口令字段中只存放一个特殊的字符，例如“x”或者“*”。")]),v._v(" "),p("p",[v._v("3）“用户标识号”是一个整数，系统内部用它来标识用户。")]),v._v(" "),p("p",[v._v("一般情况下它与用户名是一一对应的。如果几个用户名对应的用户标识号是一样的，系统内部将把它们视为同一个用户，但是它们可以有不同的口令、不同的主目录以及不同的登录Shell等。")]),v._v(" "),p("p",[v._v("通常用户标识号的取值范围是0～65 535。0是超级用户root的标识号，1～99由系统保留，作为管理账号，普通用户的标识号从100开始。在Linux系统中，这个界限是500。")]),v._v(" "),p("p",[v._v("4）“组标识号”字段记录的是用户所属的用户组。")]),v._v(" "),p("p",[v._v("它对应着/etc/group文件中的一条记录。")]),v._v(" "),p("p",[v._v("5)“注释性描述”字段记录着用户的一些个人情况。")]),v._v(" "),p("p",[v._v("例如用户的真实姓名、电话、地址等，这个字段并没有什么实际的用途。在不同的Linux 系统中，这个字段的格式并没有统一。在许多Linux系统中，这个字段存放的是一段任意的注释性描述文字，用作finger命令的输出。")]),v._v(" "),p("p",[v._v("6)“主目录”，也就是用户的起始工作目录。")]),v._v(" "),p("p",[v._v("它是用户在登录到系统之后所处的目录。在大多数系统中，各用户的主目录都被组织在同一个特定的目录下，而用户主目录的名称就是该用户的登录名。各用户对自己的主目录有读、写、执行（搜索）权限，其他用户对此目录的访问权限则根据具体情况设置。")]),v._v(" "),p("p",[v._v("7)用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即Shell。")]),v._v(" "),p("p",[v._v("Shell是用户与Linux系统之间的接口。Linux的Shell有许多种，每种都有不同的特点。常用的有sh(Bourne Shell), csh(C Shell), ksh(Korn Shell), tcsh(TENEX/TOPS-20 type C Shell), bash(Bourne Again Shell)等。")]),v._v(" "),p("p",[v._v("系统管理员可以根据系统情况和用户习惯为用户指定某个Shell。如果不指定Shell，那么系统使用sh为默认的登录Shell，即这个字段的值为/bin/sh。")]),v._v(" "),p("p",[v._v("用户的登录Shell也可以指定为某个特定的程序（此程序不是一个命令解释器）。")]),v._v(" "),p("p",[v._v("利用这一特点，我们可以限制用户只能运行指定的应用程序，在该应用程序运行结束后，用户就自动退出了系统。有些Linux 系统要求只有那些在系统中登记了的程序才能出现在这个字段中。")]),v._v(" "),p("p",[v._v("8)系统中有一类用户称为伪用户（pseudo users）。")]),v._v(" "),p("p",[v._v("这些用户在/etc/passwd文件中也占有一条记录，但是不能登录，因为它们的登录Shell为空。它们的存在主要是方便系统管理，满足相应的系统进程对文件属主的要求。")]),v._v(" "),p("p",[v._v("常见的伪用户如下所示：")]),v._v(" "),p("p",[v._v("伪 用 户 含 义\nbin 拥有可执行的用户命令文件\nsys 拥有系统文件\nadm 拥有帐户文件\nuucp UUCP使用\nlp lp或lpd子系统使用\nnobody NFS使用\n/etc/shadow")]),v._v(" "),p("p",[v._v("1、除了上面列出的伪用户外，还有许多标准的伪用户，例如：audit, cron, mail, usenet等，它们也都各自为相关的进程和文件所需要。")]),v._v(" "),p("p",[v._v("由于/etc/passwd文件是所有用户都可读的，如果用户的密码太简单或规律比较明显的话，一台普通的计算机就能够很容易地将它破解，因此对安全性要求较高的Linux系统都把加密后的口令字分离出来，单独存放在一个文件中，这个文件是/etc/shadow文件。有超级用户才拥有该文件读权限，这就保证了用户密码的安全性。")]),v._v(" "),p("p",[v._v("2、/etc/shadow中的记录行与/etc/passwd中的一一对应，它由pwconv命令根据/etc/passwd中的数据自动产生")]),v._v(" "),p("p",[v._v('它的文件格式与/etc/passwd类似，由若干个字段组成，字段之间用":"隔开。这些字段是：')]),v._v(" "),p("p",[v._v('登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志\n"登录名"是与/etc/passwd文件中的登录名相一致的用户账号')]),v._v(" "),p("p",[v._v('"口令"字段存放的是加密后的用户口令字，长度为13个字符。如果为空，则对应用户没有口令，登录时不需要口令；如果含有不属于集合 { ./0-9A-Za-z }中的字符，则对应的用户不能登录。')]),v._v(" "),p("p",[v._v('"最后一次修改时间"表示的是从某个时刻起，到用户最后一次修改口令时的天数。时间起点对不同的系统可能不一样。例如在SCO Linux 中，这个时间起点是1970年1月1日。')]),v._v(" "),p("p",[v._v('"最小时间间隔"指的是两次修改口令之间所需的最小天数。')]),v._v(" "),p("p",[v._v('"最大时间间隔"指的是口令保持有效的最大天数。')]),v._v(" "),p("p",[v._v('"警告时间"字段表示的是从系统开始警告用户到用户密码正式失效之间的天数。')]),v._v(" "),p("p",[v._v('"不活动时间"表示的是用户没有登录活动但账号仍能保持有效的最大天数。')]),v._v(" "),p("p",[v._v('"失效时间"字段给出的是一个绝对的天数，如果使用了这个字段，那么就给出相应账号的生存期。期满后，该账号就不再是一个合法的账号，也就不能再用来登录了。')]),v._v(" "),p("p",[v._v("/etc/group")]),v._v(" "),p("p",[v._v("用户组的所有信息都存放在/etc/group文件中。")]),v._v(" "),p("p",[v._v("将用户分组是Linux 系统中对用户进行管理及控制访问权限的一种手段。")]),v._v(" "),p("p",[v._v("每个用户都属于某个用户组；一个组中可以有多个用户，一个用户也可以属于不同的组。")]),v._v(" "),p("p",[v._v("当一个用户同时是多个组中的成员时，在/etc/passwd文件中记录的是用户所属的主组，也就是登录时所属的默认组，而其他组称为附加组。")]),v._v(" "),p("p",[v._v("用户要访问属于附加组的文件时，必须首先使用newgrp命令使自己成为所要访问的组中的成员。")]),v._v(" "),p("p",[v._v("用户组的所有信息都存放在/etc/group文件中。此文件的格式也类似于/etc/passwd文件，由冒号(:)隔开若干个字段，这些字段有：")]),v._v(" "),p("p",[v._v('组名:口令:组标识号:组内用户列表\n"组名"是用户组的名称，由字母或数字构成。与/etc/passwd中的登录名一样，组名不应重复。')]),v._v(" "),p("p",[v._v('"口令"字段存放的是用户组加密后的口令字。一般Linux 系统的用户组都没有口令，即这个字段一般为空，或者是*。')]),v._v(" "),p("p",[v._v('"组标识号"与用户标识号类似，也是一个整数，被系统内部用来标识组。')]),v._v(" "),p("p",[v._v('"组内用户列表"是属于这个组的所有用户的列表/b]，不同用户之间用逗号(,)分隔。这个用户组可能是用户的主组，也可能是附加组。')])])}),[],!1,null,null,null);_.default=s.exports}}]);