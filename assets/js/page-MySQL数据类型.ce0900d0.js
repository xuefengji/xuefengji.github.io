(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{1137:function(t,e,v){"use strict";v.r(e);var _=v(1),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"mysql-数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mysql-数据类型"}},[t._v("#")]),t._v(" MySQL 数据类型")]),t._v(" "),v("p",[t._v("MySQL 中的数据类型在使用时可以划分为：数值类型、时间类型、字符串类型、枚举与集合类型")]),t._v(" "),v("h2",{attrs:{id:"数值类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数值类型"}},[t._v("#")]),t._v(" 数值类型")]),t._v(" "),v("p",[t._v("有整数和浮点数两种，再根据字节来区分：字节一般是 8 位的二进制，如果需要带符号，就会占用第一位来表示符号，用 "),v("code",[t._v("0")]),t._v(" 表示整数，"),v("code",[t._v("1")]),t._v(" 表示负数")]),t._v(" "),v("p",[t._v("很显然，使用的字节数越多，意味着能表示的数值范围就越大，但是也就越耗费存储空间")]),t._v(" "),v("h3",{attrs:{id:"整数类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#整数类型"}},[t._v("#")]),t._v(" 整数类型")]),t._v(" "),v("p",[t._v("整数有 5 种：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("占用存储空间")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("无符号数取值范围")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("有符号数取值范围")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("用途")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("TINYINT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("1 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0 ~ 2⁸-1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-2⁷ ~ 2⁷-1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("非常小的整数")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("SMALLINT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("2 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0 ~ 2¹⁶-1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-2¹⁵ ~ 2¹⁵-1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("小的整数")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("MEDIUMINT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("3 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0 ~ 2²⁴-1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-2²³ ~ 2²³-1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("中等大小的整数")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("INT")]),t._v(" 或 "),v("code",[t._v("INTEGER")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("4 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0 ~ 2³²-1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-2³¹ ~ 2³¹-1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("标准的整数")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("BIGINT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("8 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0 ~ 2⁶⁴-1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-2⁶³ ~ 2⁶³-1")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("大整数")])])])]),t._v(" "),v("p",[t._v("在 MySQL 中定义的 BOOL 或 BOOLEAN 类型，最终会转换成 TINYINT(1) 类型，用 "),v("code",[t._v("1")]),t._v(" 代表 "),v("code",[t._v("TRUE")]),t._v("，"),v("code",[t._v("0")]),t._v(" 代表 "),v("code",[t._v("FALSE")])]),t._v(" "),v("h3",{attrs:{id:"浮点数类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浮点数类型"}},[t._v("#")]),t._v(" 浮点数类型")]),t._v(" "),v("p",[t._v("浮点数有 2 种：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("占用存储空间")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("无符号数取值范围")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("有符号数取值范围")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("用途")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("FLOAT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("4 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0 "),v("hr"),t._v(" (1.175494351E-38,"),v("br"),t._v(" 3.402823466E+38)")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("(-3.402823466E+38,"),v("br"),t._v(" -1.175494351E-38) "),v("hr"),t._v(" 0 "),v("hr"),t._v(" (1.175494351E-38,"),v("br"),t._v(" 3.402823466E+38)")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("单精度浮点数")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("DOUBLE")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("8 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("0 "),v("hr"),t._v(" (2.2250738585072014E-308,"),v("br"),t._v(" 1.7976931348623157E+308)")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("(-1.7976931348623157E+308,"),v("br"),t._v(" -2.2250738585072014E-308) "),v("hr"),t._v(" 0 "),v("hr"),t._v(" (2.2250738585072014E-308,"),v("br"),t._v(" 1.7976931348623157E+308)")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("双精度浮点数")])])])]),t._v(" "),v("h4",{attrs:{id:"浮点数的不精确性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浮点数的不精确性"}},[t._v("#")]),t._v(" 浮点数的不精确性")]),t._v(" "),v("p",[t._v("在计算机中十进制最终是被转成二进制来存储的，比如十进制小数 "),v("code",[t._v("9.875")]),t._v(" 转换成二进制小数的话就是："),v("code",[t._v("1001.111")])]),t._v(" "),v("p",[t._v("但虽然有的十进制小数，比如 "),v("code",[t._v("1.875")]),t._v(" 可以被很容易的转换成二进制数 "),v("code",[t._v("1.111")]),t._v("，但是更多的小数是无法直接转换成二进制的，比如说 "),v("code",[t._v("0.3")]),t._v("，它转换成的二进制小数就是一个无限小数，但是我们现在只能用 4 个字节或者 8 个字节来表示这个小数，所以只能进行一些舍入来近似的表示，所以我们说计算机的浮点数表示有时是不精确的。")]),t._v(" "),v("h4",{attrs:{id:"设置最大位数和小数位数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设置最大位数和小数位数"}},[t._v("#")]),t._v(" 设置最大位数和小数位数")]),t._v(" "),v("p",[t._v("在定义浮点数类型时，还可以在 "),v("code",[t._v("FLOAT")]),t._v(" 或者 "),v("code",[t._v("DOUBLE")]),t._v(" 后边跟上两个参数，就像这样：")]),t._v(" "),v("div",{staticClass:"language-bash line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[t._v("FLOAT"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("M, D"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nDOUBLE"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("M, D"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br")])]),v("p",[t._v("对于我们用户而言，使用的都是十进制小数。如果我们事先知道表中的某个列要存储的小数在一定范围内，我们可以使用 "),v("code",[t._v("FLOAT(M, D)")]),t._v(" 或者 "),v("code",[t._v("DOUBLE(M, D)")]),t._v(" 来限制可以存储到本列中的小数范围。其中：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("M")]),t._v(" 表示该小数最多需要的十进制有效数字个数。\n"),v("ul",[v("li",[t._v("注意是"),v("strong",[t._v("有效数字")]),t._v("个数，对于小数 "),v("code",[t._v("-2.3")]),t._v(" 来说有效数字个数就是 2，对于小数 "),v("code",[t._v("0.9")]),t._v(" 来说有效数字个数就是 1。")])])]),t._v(" "),v("li",[v("code",[t._v("D")]),t._v(" 表示该小数的小数点后的十进制数字个数。\n"),v("ul",[v("li",[t._v("小数点后有几个十进制数字，"),v("code",[t._v("D")]),t._v(" 的值就是什么。")])])])]),t._v(" "),v("p",[t._v("例如下面这样设置了 "),v("code",[t._v("M")]),t._v(" 和 "),v("code",[t._v("D")]),t._v(" 的单精度浮点数的取值范围：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("取值范围")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("FLOAT(4, 1)")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-999.9 ~ 999.9")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("FLOAT(5, 1)")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-9999.9 ~ 9999.9")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("FLOAT(6, 1)")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-99999.9 ~ 99999.9")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("FLOAT(4, 0)")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-9999 ~ 9999")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("FLOAT(4, 1)")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-999.9 ~ 999.9")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("FLOAT(4, 2)")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-99.99 ~ 99.99")])])])]),t._v(" "),v("p",[t._v("当然，"),v("code",[t._v("M")]),t._v(" 和 "),v("code",[t._v("D")]),t._v(" 的取值也不是无限大的：")]),t._v(" "),v("ul",[v("li",[t._v("M 的取值范围是 "),v("code",[t._v("1 ~ 255")])]),t._v(" "),v("li",[t._v("D 的取值范围是 "),v("code",[t._v("0 ~ 30")])]),t._v(" "),v("li",[t._v("MySQL 要求 "),v("code",[t._v("D <= M")]),t._v("。")])]),t._v(" "),v("p",[t._v("M 和 D 都是可选的，如果我们省略了它们，那它们的值按照机器支持的最大值来存储")]),t._v(" "),v("h3",{attrs:{id:"定点数类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定点数类型"}},[t._v("#")]),t._v(" 定点数类型")]),t._v(" "),v("p",[t._v("因为用浮点数表示小数可能会有不精确的情况，在一些情况下我们必须保证小数是精确的，所以有了定点数类型，它也是存储小数的一种方式：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("占用存储空间")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("取值范围")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("用途")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("DECIMAL(M, D)")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("取决于 M 和 D")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("取决于 M 和 D")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("一些需要保存定长小数的项，比如存储的值要求保存数位小数")])])])]),t._v(" "),v("p",[t._v("其中 "),v("code",[t._v("M")]),t._v(" 和 "),v("code",[t._v("D")]),t._v(" 的含义与浮点数中的含义一样，但取值范围略有不一样：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("M")]),t._v(" 是表示有效数字数的精度，范围为 "),v("code",[t._v("1 ~ 65")])]),t._v(" "),v("li",[v("code",[t._v("D")]),t._v(" 是表示小数点后的位数，范围为 "),v("code",[t._v("0 ~ 30")])]),t._v(" "),v("li",[t._v("MySQL 要求 "),v("code",[t._v("D <= M")])])]),t._v(" "),v("h4",{attrs:{id:"为什么能保证小数精确"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么能保证小数精确"}},[t._v("#")]),t._v(" 为什么能保证小数精确")]),t._v(" "),v("p",[t._v("定点数类型的 "),v("code",[t._v("M")]),t._v(" 和 "),v("code",[t._v("D")]),t._v(" 的含义与浮点数中的含义一样，但是占用存储空间不一样：")]),t._v(" "),v("ul",[v("li",[t._v("单精度浮点数类型 "),v("code",[t._v("FLOAT(M, D)")]),t._v(" 占用的字节数一直都是 4 字节")]),t._v(" "),v("li",[t._v("双精度浮点数类型 "),v("code",[t._v("DOUBLE(M, D)")]),t._v(" 占用的字节数一直都是 8 字节")]),t._v(" "),v("li",[t._v("定点数类型 "),v("code",[t._v("DECIMAL(M, D)")]),t._v(" 占用的字节数随着 M 和 D 的值的变动而变动")])]),t._v(" "),v("p",[t._v("这是因为定点数作为一种精确的小数，为了达到精确的目的就不能把它转换成二进制小数之后再存储（因为有很多十进制小数转为二进制小数后需要进行舍入操作，导致二进制小数表示的数值是不精确的）")]),t._v(" "),v("p",[t._v("那么它是怎么存储的呢？大致的思路就是把小数点左右的两个十进制整数给存储起来，比如对于十进制小数 "),v("code",[t._v("2.38")]),t._v(" 来说，可以把这个小数的小数点左右的两个整数，也就是 "),v("code",[t._v("2")]),t._v(" 和 "),v("code",[t._v("38")]),t._v(" 分别保存起来。当然事情并没有这么简单，具体的实现原理这里就不展开研究了")]),t._v(" "),v("h3",{attrs:{id:"无符号数值类型的表示"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#无符号数值类型的表示"}},[t._v("#")]),t._v(" 无符号数值类型的表示")]),t._v(" "),v("p",[t._v("对于数值类型，有些情况下我们只需要用到无符号数（就是非负数），定义时就是在原数值类型后加一个单词 "),v("code",[t._v("UNSIGNED")]),t._v("：")]),t._v(" "),v("div",{staticClass:"language-bash line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[t._v("数值类型 UNSIGNED\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("例如：")]),t._v(" "),v("div",{staticClass:"language-bash line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[t._v("INT UNSIGNED      "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示无符号整数")]),t._v("\nFLOAT UNSIGNED    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示无符号浮点数")]),t._v("\nDECIMAL UNSIGNED  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示无符号定点数")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br")])]),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("小贴士")]),t._v(" "),v("p",[t._v("在使用的存储空间大小相同的情况下，无符号整数可以表示的正整数范围比有符号整数能表示的正整数范围大一倍。不过受浮点数和定点数具体的存储格式影响，无符号浮点数和定点数并不能提升正数的表示范围")])]),t._v(" "),v("h2",{attrs:{id:"日期和时间类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间类型"}},[t._v("#")]),t._v(" 日期和时间类型")]),t._v(" "),v("p",[t._v("MySQL 提供了多种关于时间和日期的类型，各种类型能表示的范围如下：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("占用存储空间")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("范围")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("格式")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("用途")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("YEAR")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("1 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("1901 ~ 2155")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("YYYY")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("年份值")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("DATE")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("3 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("1000-01-01 "),v("br"),t._v("~"),v("br"),t._v(" 9999-12-31")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("YYYY-MM-DD")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("日期值")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("TIME")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("3 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("-838:59:59 "),v("br"),t._v("~"),v("br"),t._v(" 838:59:59")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("HH:MM:SS")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("时间值")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("DATETIME")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("8 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("1000-01-01 00:00:00 "),v("br"),t._v("~"),v("br"),t._v(" 9999-12-31 23:59:59")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("YYYY-MM-DD HH:MM:SS")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("日期加时间值")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("TIMESTAMP")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("4 字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("1970-01-01 00:00:00 "),v("br"),t._v("~"),v("br"),t._v(" 2038-1-19 11:14:07")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("YYYY-MM-DD HH:MM:SS")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("时间戳")])])])]),t._v(" "),v("p",[t._v("若定义一个字段为 "),v("code",[t._v("TIMESTAMP")]),t._v("，这个字段里的时间数据会随其他字段修改的时候自动刷新，所以这个数据类型的字段可以存放这条记录最后被修改的时间")]),t._v(" "),v("h2",{attrs:{id:"字符串类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字符串类型"}},[t._v("#")]),t._v(" 字符串类型")]),t._v(" "),v("h3",{attrs:{id:"字符编码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字符编码"}},[t._v("#")]),t._v(" 字符编码")]),t._v(" "),v("p",[t._v("在具体分析 MySQL 中各个字符串类型之前，一定要先搞明白字符和字节的区别。字符是面向人的概念，字节是面向计算机的概念。如果你想在计算机中表示字符，那就需要将该字符与一个特定的字节序列对应起来，这个映射过程称之为编码。不幸的是，这种映射关系并不是唯一的，不同的人制作了不同的编码方案，根据表示一个字符使用的字节数量是不是固定的，编码方案可以分为下边两种：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("固定长度的编码方案")]),v("br"),t._v("\n表示不同的字符所需要的字节数量是相同的。比如 "),v("code",[t._v("ASCII")]),t._v(" 编码方案采用 1 个字节来编码一个字符，"),v("code",[t._v("ucs2")]),t._v(" 采用 2 个字节来编码一个字符")]),t._v(" "),v("li",[v("strong",[t._v("变长的编码方案")]),v("br"),t._v("\n表示不同的字符所需要的字节数量是不同的。比比如 "),v("code",[t._v("utf8")]),t._v(" 编码方案采用 1~3 个字节来编码一个字符，"),v("code",[t._v("gb2312")]),t._v(" 采用 1~2 个字节来编码一个字符")])]),t._v(" "),v("p",[t._v("对于不同的字符编码方案来说，同一个字符可能被编码成不同的字节序列。比如同样一个字符："),v("code",[t._v("我")]),t._v("，在 "),v("code",[t._v("utf8")]),t._v(" 和 "),v("code",[t._v("gb2312")]),t._v(" 这两种编码方案下被映射成如下的字节序列：")]),t._v(" "),v("div",{staticClass:"language-bash line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# utf8 编码方案，将字符 '我' 编码成：")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("111001101000100010010001")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 共占用 3 个字节，用十六进制表示就是：0xE68891")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gb2312 编码方案，将字符 '我' 编码成：")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1100111011010010")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 共占用 2 个字节，用十六进制表示就是：0xCED2")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br")])]),v("p",[t._v("另外，设计 MySQL 的人最初对"),v("strong",[t._v("编码方案")]),t._v("和"),v("strong",[t._v("字符集")]),t._v("这两个概念并没做明确区分，也就是说我们之后所讲的 "),v("code",[t._v("utf8")]),t._v(" 字符集指的就是 "),v("code",[t._v("utf8")]),t._v(" 编码方案，"),v("code",[t._v("gb2312")]),t._v(" 字符集指的也就是 "),v("code",[t._v("gb2312")]),t._v(" 编码方案")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("小贴士")]),t._v(" "),v("p",[t._v("正宗的 utf8 字符集是使用 1~4 个字节来编码一个字符的，不过 MySQL 中对 utf8 字符集做了阉割，编码一个字符最多使用 3 个字节")]),t._v(" "),v("p",[t._v("如果我们之后有存储使用 4 个字节来编码的字符的情景，可以使用一种称之为 utf8mb4 的字符集，它才是正宗的 utf8 字符集（现在一般都是用这种）")])]),t._v(" "),v("h3",{attrs:{id:"常用类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用类型"}},[t._v("#")]),t._v(" 常用类型")]),t._v(" "),v("p",[t._v("以下是 MySQL 中提供的各种字符串类型：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("最大长度")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("占用存储空间")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("特性")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("用途")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("CHAR(M)")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("M 个字符")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("M×W 个字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("固定长度")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("固定长度的字符串")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("VARCHAR(M)")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("M 个字符")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("L+1 或 L+2 个字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("固定长度")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("可变长度的字符串")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("TINYTEXT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("2⁸-1 个字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("L+1 个字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("可变长度，大小写不敏感")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("非常小型的字符串")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("TEXT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("2¹⁶-1 个字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("L+2 个字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("可变长度，大小写不敏感")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("小型的字符串")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("MEDIUMTEXT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("2²⁴-1 个字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("L+3 个字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("可变长度，大小写不敏感")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("中等大小的字符串")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("LONGTEXT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("2³²-1 个字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("L+4 个字节")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("可变长度，大小写不敏感")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("大型的字符串")])])])]),t._v(" "),v("p",[t._v("（注：其中 "),v("code",[t._v("M")]),t._v(" 代表该数据类型最多能存储的"),v("strong",[t._v("字符数量")]),t._v("，"),v("code",[t._v("L")]),t._v(" 代表实际存储的字符串在特定字符集下所占的"),v("strong",[t._v("字节数")]),t._v("，"),v("code",[t._v("W")]),t._v(" 代表在该特定字符集下，编码一个字符最多需要的字节数）")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("小贴士")]),t._v(" "),v("p",[t._v("在 MySQL 中，一个英文字母占 1 字节，一个中文汉字所占的字节数与编码格式有关：")]),t._v(" "),v("ul",[v("li",[t._v("如果是 gbk 编码，则一个中文汉字占 2 个字节")]),t._v(" "),v("li",[t._v("如果是 utf8 编码，则一个中文汉字占 3 个字节")])])]),t._v(" "),v("h4",{attrs:{id:"char-m"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#char-m"}},[t._v("#")]),t._v(" CHAR(M)")]),t._v(" "),v("p",[v("code",[t._v("CHAR(M)")]),t._v(" 中的 "),v("code",[t._v("M")]),t._v(" 代表该类型最多可以存储的"),v("strong",[t._v("字符数量")]),t._v("，它的取值范围是 "),v("code",[t._v("0~255")])]),t._v(" "),v("ul",[v("li",[t._v("如果省略 M，它的默认值就是 "),v("code",[t._v("1")])]),t._v(" "),v("li",[v("code",[t._v("CHAR(0)")]),t._v(" 是一种特别的类型，它只能存储空字符串 "),v("code",[t._v("''")]),t._v(" 或者 "),v("code",[t._v("NULL")]),t._v(" 值")])]),t._v(" "),v("p",[t._v("因为 "),v("code",[t._v("CHAR")]),t._v(" 是固定长度的，所以如果实际存储的字符串在特定字符集编码下占用的字节数不足 M×W，那么剩余的那些存储空间用空格字符（"),v("code",[t._v("' '")]),t._v("）补齐")]),t._v(" "),v("p",[t._v("这也就是说：一旦确定了 CHAR(M) 类型的 M 的值，如果 M 的值很大，而实际存储的字符串占用字节数又很少，会造成存储空间的浪费")]),t._v(" "),v("h4",{attrs:{id:"varchar-m"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#varchar-m"}},[t._v("#")]),t._v(" VARCHAR(M)")]),t._v(" "),v("p",[t._v("如果表中某个列需要存储字符串类型的数据，而且这些字符串长短不一，使用 "),v("code",[t._v("CHAR(M)")]),t._v(" 可能会浪费很多存储空间，"),v("code",[t._v("VARCHAR(M)")]),t._v(" 会是一个更好的选择")]),t._v(" "),v("p",[v("code",[t._v("VARCHAR(M)")]),t._v(" 中的 "),v("code",[t._v("M")]),t._v(" 也是代表该类型最多可以存储的字符数量，理论上的取值范围是 "),v("code",[t._v("1~65535")]),t._v("。但是 MySQL 中还有一个规定，表中某一行包含的所有列中存储的数据大小总共不得超过 65535 个字节（注意是字节），也就是说 "),v("code",[t._v("VARCHAR(M)")]),t._v(" 类型实际能够容纳的字符数量是小于 65535 的")]),t._v(" "),v("h4",{attrs:{id:"各种-text-类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#各种-text-类型"}},[t._v("#")]),t._v(" 各种 TEXT 类型")]),t._v(" "),v("p",[t._v("如果 "),v("code",[t._v("VARCHAR(M)")]),t._v(" 的长度开始不够用，那么可以考虑另外几种 TEXT 类型，它们也都是变长类型：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("TINYTEXT")]),t._v(" 最多可以存储 2⁸-1 个字节")]),t._v(" "),v("li",[v("code",[t._v("TEXT")]),t._v(" 最多可以存储 2¹⁶-1 个字节")]),t._v(" "),v("li",[v("code",[t._v("MEDIUMTEXT")]),t._v(" 最多可以存储 2²⁴-1 个字节")]),t._v(" "),v("li",[v("code",[t._v("LONGTEXT")]),t._v(" 最多可以存储 2³²-1 个字节")])]),t._v(" "),v("p",[t._v("前面提到某一行包含的所有列中存储的数据大小总和不得超过 65535 个字节么，这个规定对这些 TEXT 类型是不起作用的，它们并不在这个规定的限制范围之内。一个表中如果有的属性需要存储特别长的文本的话，就可以考虑使用这几个类型了")]),t._v(" "),v("h2",{attrs:{id:"enum-类型和-set-类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#enum-类型和-set-类型"}},[t._v("#")]),t._v(" ENUM 类型和 SET 类型")]),t._v(" "),v("p",[t._v("ENUM 和 SET 类型都是一种特殊的字符串类型，在从字符串列表中单选或多选元素的时候会用得到它们")]),t._v(" "),v("h3",{attrs:{id:"枚举"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#枚举"}},[t._v("#")]),t._v(" 枚举")]),t._v(" "),v("p",[t._v("枚举（ENUM）是单选字符串数据类型，适合存储表单界面中的「单选值」，比如性别")]),t._v(" "),v("p",[t._v("设定 ENUM 的时候，需要给定「固定的几个选项」，存储的时候就只存储其中的一个值")]),t._v(" "),v("p",[t._v("设定 ENUM 的格式：")]),t._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"选项1"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"选项2"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"选项3"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("实际上，ENUM 的选项都会对应一个数字，依次是 1，2，3，4，5...，最多有 65535 个选项。")]),t._v(" "),v("p",[t._v("使用的时候，可以使用选项的字符串格式，也可以使用对应的数字")]),t._v(" "),v("h3",{attrs:{id:"集合"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[t._v("#")]),t._v(" 集合")]),t._v(" "),v("p",[t._v("集合（SET）是多选字符串数据类型，适合存储表单界面的「多选值」")]),t._v(" "),v("p",[t._v("设定 SET 的时候，同样需要给定「固定的几个选项」，存储的时候，可以存储其中的若干个值")]),t._v(" "),v("p",[t._v("设定 SET 的格式：")]),t._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"选项1"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"选项2"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"选项3"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("同样的，SET 的每个选项值也对应一个数字，依次是 1，2，4，8，16...，最多有 64 个选项")]),t._v(" "),v("p",[t._v("使用的时候，可以使用 SET 选项的字符串本身（多个选项用逗号分隔），也可以使用多个选项的数字之和（比如：1+2+4=7）")]),t._v(" "),v("h2",{attrs:{id:"二进制类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二进制类型"}},[t._v("#")]),t._v(" 二进制类型")]),t._v(" "),v("h3",{attrs:{id:"bit-类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#bit-类型"}},[t._v("#")]),t._v(" BIT 类型")]),t._v(" "),v("p",[t._v("有时候我们有存储单个或者多个比特位的需求，此时就可以用到这种类型：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("字节数")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("用途")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("BIT(M)")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("近似为(M+7)/8")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("存储 M 个比特位的值")])])])]),t._v(" "),v("p",[t._v("其中 "),v("code",[t._v("M")]),t._v(" 的取值范围为 "),v("code",[t._v("1~64")]),t._v("，而且 M 可以省略，它的默认值为 1，也就是说 "),v("code",[t._v("BIT(1)")]),t._v(" 和 "),v("code",[t._v("BIT")]),t._v(" 的意思是一样的")]),t._v(" "),v("p",[t._v("MySQL 是以字节为单位存储数据的，一个字节拥有 8 个比特位。如果我们想存储的比特位个数不足整数个字节，那么 MySQL 会偷偷的填充满，比如：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("BIT(1)")]),t._v(" 类型仅仅需要存储 1 个比特位的数据，但是 MySQL 会为其申请 "),v("code",[t._v("(1+7)/8 = 1")]),t._v(" 个字节")]),t._v(" "),v("li",[v("code",[t._v("BIT(5)")]),t._v(" 类型仅仅需要存储 5 个比特位的数据，但是 MySQL 会为其申请 "),v("code",[t._v("(5+7)/8 = 1")]),t._v(" 个字节")]),t._v(" "),v("li",[v("code",[t._v("BIT(9)")]),t._v(" 类型仅仅需要存储 9 个比特位的数据，但是 MySQL 会为其申请 "),v("code",[t._v("(9+7)/8 = 2")]),t._v(" 个字节")])]),t._v(" "),v("h3",{attrs:{id:"binary-m-与-varbinary-m"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#binary-m-与-varbinary-m"}},[t._v("#")]),t._v(" BINARY(M) 与 VARBINARY(M)")]),t._v(" "),v("p",[v("code",[t._v("BINARY(M)")]),t._v(" 和 "),v("code",[t._v("VARBINARY(M)")]),t._v(" 对应于前面提到的 "),v("code",[t._v("CHAR(M)")]),t._v(" 和 "),v("code",[t._v("VARCHAR(M)")]),t._v("，都是前者是固定长度的类型，后者是可变长度的类型，只不过：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("BINARY(M)")]),t._v(" 和"),v("code",[t._v("VARBINARY(M)")]),t._v(" 是用来存放字节的，其中的 "),v("code",[t._v("M")]),t._v(" 代表该类型最多能存放的"),v("strong",[t._v("字节数量")])]),t._v(" "),v("li",[v("code",[t._v("CHAR(M)")]),t._v(" 和 "),v("code",[t._v("VARCHAR(M)")]),t._v(" 是用来存储字符的，其中的 "),v("code",[t._v("M")]),t._v(" 代表该类型最多能存放的"),v("strong",[t._v("字符数量")])])]),t._v(" "),v("h3",{attrs:{id:"其他的二进制类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他的二进制类型"}},[t._v("#")]),t._v(" 其他的二进制类型")]),t._v(" "),v("p",[v("code",[t._v("TINYBLOB")]),t._v("、"),v("code",[t._v("BLOB")]),t._v("、"),v("code",[t._v("MEDIUMBLOB")]),t._v("、"),v("code",[t._v("LONGBLOB")]),t._v(" 是针对数据量很大的二进制数据提出的，比如图片、音频、压缩文件啥的。它们很像 "),v("code",[t._v("TINYTEXT")]),t._v("、"),v("code",[t._v("TEXT")]),t._v("、"),v("code",[t._v("MEDIUMTEXT")]),t._v("、"),v("code",[t._v("LONGTEXT")]),t._v("，不过各种 "),v("code",[t._v("BLOB")]),t._v(" 类型是用来存储"),v("strong",[t._v("字节")]),t._v("的，而各种 "),v("code",[t._v("TEXT")]),t._v(" 类型是用来存储"),v("strong",[t._v("字符")]),t._v("的而已")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("小贴士")]),t._v(" "),v("p",[t._v("对于比较大的二进制数据，比如图片、音频、压缩文件等，通常情况下都不直接存储到数据库管理系统中，而是将它们保存到文件系统中，然后在数据库中之存放一个文件路径即可")])]),t._v(" "),v("h2",{attrs:{id:"数据类型的属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据类型的属性"}},[t._v("#")]),t._v(" 数据类型的属性")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("MySQL 关键字")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("NULL")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("数据列可包含 "),v("code",[t._v("NULL")]),t._v(" 值")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("NOT NULL")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("数据列不允许包含 "),v("code",[t._v("NULL")]),t._v(" 值")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("DEFAULT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("默认值")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("PRIMARY KEY")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("主键")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("AUTO_INCREMENT")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("自动递增，适用于整数类型")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("UNSIGNED")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("无符号")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("code",[t._v("CHARACTER SET name")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("指定一个字符集")])])])]),t._v(" "),v("p",[t._v("（完）")])])}),[],!1,null,null,null);e.default=a.exports}}]);